{"version":3,"sources":["common/redux/action/loginAction.js","common/redux/action/commonAction.js","common/redux/action/masterVariabelAction.js","common/redux/action/dropdownAction.js","common/redux/action/kabupatenAction.js","common/redux/action/masterBobotAction.js","common/redux/action/masterJabatanAction.js","common/redux/action/kecamatanAction.js","common/redux/action/userAction.js","common/redux/action/menuAction.js","common/redux/action/addMonevAction.js","common/redux/action/indikatorAction.js","common/redux/action/pertanyaanAction.js","common/redux/action/pegawaiKecamatanAction.js","common/redux/action/formStepAction.js","common/redux/action/reportMonecAction.js"],"names":["setFormLogin","formType","formValue","type","setFormForgot","ResetPasswordAction","data","dispatch","http","post","process","serviceName","svcSettingApps","UsernameOrEmailForgot","then","res","isSuccess","Swal","fire","payload","returnMessage","apiLogin","iData","get","UsernameOrEmail","Password","sessionStorage","setItem","idUser","idKecamatan","window","location","loadingStatus","bool","title","html","showConfirmButton","onBeforeOpen","showLoading","onAfterClose","hideLoading","allowOutsideClick","allowEscapeKey","allowEnterKey","close","setFormVariabel","GetDataVariabel","svcMasterVariabel","setVariabelId","idVariabel","idJenisVariabel","nama","presentase","ReturnMessage","PostVariabel","getItem","param","IdJenisVariabel","Nama","Presentase","UpdateVariabel","DeleteVariabel","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","setDataComboProv","svcMasterWillOrgs","setDataDropdownKabupatenAction","idProv","setDataDropdownKecamatanAction","idKab","SetJenisVariabel","SetDropdownJenisLokpriAction","svcMasterJenisLokpri","SetDropdownJenisLokpriParseAction","arrTmp","map","v","i","push","value","idJenisLokpri","label","SetDropdownRolesAction","tmpArr","idRole","roleName","SetDropdownJabatanAction","idJabatan","SetDropdownJabatan1Action","SetDropdownPgwKecamatansByJabatanAction","idPegawai","fullName","setFormKab","GetKabupatens","IdProvinsi","GetKabupatenById","idKabupaten","dataKab","idProvinsi","kode","PostKabupaten","Kode","UpdateKabupaten","DeleteKabupaten","namaKab","setFormKecukupanAction","setFormKetersediaanAction","setFormKondisiAction","GetBobotKecukupan","svcBobot","GetBobotKetersediaanAction","GetBobotKondisiAction","PostBobotKecukupanAction","Bobot","PostBobotKetersediaanAction","PostBobotKondisiAction","SetBobokKecukupanByIdAction","id","bobot","SetBobotKetersediaanByIdAction","SetBobotKondisiByIdAction","UpdateBobotKecukupanAction","UpdateBobotKetersediaanAction","UpdateBobotKondisiAction","DeleteKecukupanAction","DeleteKetersediaanAction","DeleteKondisiAction","setFormJabatanAction","GetDataJabatanAction","PostJabatanAction","setJabatanIdAction","UpdateJabatanAction","DeleteJabatanAction","GeKecamatanByIdKabupatenAction","setFormKecAction","prosesKecamatanAddAction","IdKabupaten","Alamat","Longitude","Latitude","GetKecamatanByIdKecamatanAction","idKecamata","alamat","longitude","latitude","prosesKecamatanEditAction","ProsesDeleteKecamatanAction","console","log","setFormUserAction","GetUsersAPIAction","index","roleNameTmp","roles","join","lastLogin","strStatus","username","password","email","firstName","middleName","lastName","address","phoneNumber","mobileNumber","fileImage","GetUserAPIByIdUserAction","rolesTmpArr","AddUserAPIAction","dataNewValue","tmpRoles","Roles","IdRole","SetUserInActiveAction","idUserParam","SetUserActiveAction","UpdateUserAPIAction","GetMenuListAction","idApp","SetPegawaiChangedAction","SetFirstFormAction","GetPegawiKecamatanAction","officeAddress","saveToTemporaryAction","svcMonev","results","resultData","isEdit","cancelButtonText","resultConfm","SetGetJawabanLastAction","idMonev","idIndikator","dataJawaban","setFormIndikatorAction","GetIndikatorsAction","svcIndikators","variabel","indikators","GetIndikatorByIdAction","PostIndikatorAction","IdVariabel","Type","UpdateIndikatorAction","DeleteIndikator","setFormPertanyaanAction","GetPertanyaanAction","svcMasterPertanyaan","pertanyaans","setFormUserKecAction","GetUsersKecAPIAction","AddUserAPIKecAction","SetUserInActiveKecAction","SetUserActiveKecAction","getBobotKondisiAction","tidak_layak","cukup_layak","layak","bobotTdkLayakBawah","bobotTdkLayakAtas","bobotCukupLayakBawah","bobotCukupLayakAtas","bobotLayakBawah","bobotLayakAtas","SetGetJawabanAction","setFormFilterMonev","GetMonevByYearAction","year"],"mappings":"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","file":"static/js/2.aee3897e.chunk.js","sourcesContent":["\nimport {http} from '../../helper/http';\nimport Swal from 'sweetalert2';\nimport serviceName from 'src/common/helper/serviceName';\nexport const setFormLogin = (formType, formValue) => {\n\n    return {type: 'login', formType, formValue}\n}\n\nexport const setFormForgot = (formType, formValue) => {\n  return { type: \"forgot\", formType, formValue };\n}\n\nexport const ResetPasswordAction = (data) => {\n  return(dispatch) => {\n    http.post(\n      `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/ResetPassword?UsernamOrEmail=${data.UsernameOrEmailForgot}`\n    ).then(res => {\n      let data = res.data;\n      if(data.isSuccess){\n         Swal.fire(\"Berhasil\", `Anda Berhasil reset password`, \"success\");\n         dispatch({ type: \"MODAL_FORGOT_PASSWORD\", payload:true});\n      }else{\n         Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n      }\n    });\n  }\n}\n\nexport const apiLogin = (iData) => {\n\n    return (dispatch) => {\n          http.get(`${process.env.REACT_APP_ROOT_API}UserApps/Login?UsernameOrEmail=${iData.UsernameOrEmail}&Password=${iData.Password}`\n\n        ).then((res) => {\n\n            let data = res.data;\n            if (data.isSuccess) {\n                sessionStorage.setItem('isSuccessLgn', true);\n                sessionStorage.setItem('idUser', res.data.data.idUser);\n                sessionStorage.setItem(\n                  \"idKecamatan\",\n                  res.data.data.idKecamatan\n                );\n                Swal.fire('Berhasil', `Selamat datang!!!`, 'success').then(() => window.location = '/')\n            } else {\n                Swal.fire('Gagal', `${data.returnMessage}`, 'error');\n            }\n        })\n    }\n}\n","\nimport Swal from 'sweetalert2'\nexport const loadingStatus = (bool = true) => {\n  if (bool) {\n    Swal.fire({\n      title: \"proses sedangan dilakukan\",\n      html: \"silahkan menunggu...\",\n      showConfirmButton: false,\n      onBeforeOpen() {\n        Swal.showLoading();\n      },\n      onAfterClose() {\n        Swal.hideLoading();\n      },\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      allowEnterKey: false,\n    });\n  } else {\n    Swal.close();\n  }\n};\n","import { http } from 'src/common/'\nimport serviceName from 'src/common/helper/serviceName';\nimport Swal from 'sweetalert2';\nimport { loadingStatus } from './commonAction';\n\n\n\nexport const setFormVariabel = (formType, formValue) => {\n  return { type: \"ADD_VARIABEL\", formType, formValue };\n};\n\n/**\n * GetVariabel\n * @param {*} data\n * @returns : LIST Variabel\n */\n\nexport const GetDataVariabel = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/GetVariabels`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n}\n\n/**\n *\n * @param {idVar} data\n * @returns\n */\n\nexport const setVariabelId = (idVariabel) =>{\n return (dispatch) => {\n   loadingStatus(true);\n   dispatch({ type: \"RESET_FORM_VARIABEL\" });\n   http\n     .get(\n       `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/GetVariabel?IdVariabel=${idVariabel}`\n     )\n     .then((res) => {\n       loadingStatus(false);\n       let data = res.data;\n       if (data.isSuccess) {\n         dispatch(setFormVariabel(\"IdVariabel\", idVariabel));\n         dispatch(\n           setFormVariabel(\"IdJenisVariabel\", data.data.idJenisVariabel)\n         );\n         dispatch(setFormVariabel(\"Nama\", data.data.nama));\n         dispatch(setFormVariabel(\"Presentase\", data.data.presentase));\n         dispatch({ type: \"MODAL_VARIABEL\", payload: true });\n       } else {\n         Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n       }\n     });\n };\n}\n\n/**\n * add new variabel\n */\n\nexport const PostVariabel = (data) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    let idUser = sessionStorage.getItem(\"idUser\");\n    let param = `?IdUser=${idUser}&IdJenisVariabel=${data.IdJenisVariabel}&Nama=${data.Nama}&Presentase=${data.Presentase}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/AddVariabel${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_VARIABEL\", payload: false });\n          dispatch({ type: \"RESET_FORM_VARIABEL\" });\n            dispatch(GetDataVariabel(\"GET_VARIABELS\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/***\n * Proses udpate\n */\nexport const UpdateVariabel = (data) => {\n  let idUser = sessionStorage.getItem('idUser');\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/EditVariabel?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_VARIABEL\", payload: false });\n          dispatch(GetDataVariabel(\"GET_VARIABELS\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n}\n\nexport const DeleteVariabel = (idVariabel, nama) => {\n  let idUser = sessionStorage.getItem('idUser');\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus variabel ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/DeleteVariabel?IdUser=${idUser}&IdVariabel=${idVariabel}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(\n                `Sukses`,\n                `Data ${nama} berhasil dihapus`,\n                `success`\n              );\n              dispatch({ type: \"RESET_FORM_VARIABEL\" });\n              dispatch(GetDataVariabel(\"GET_VARIABELS\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n\n","import { http } from \"src/common/helper\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n\n\n\nexport const setDataComboProv = (type) => {\n  return (dispatch) => {\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetProvinsis`\n      )\n      .then((res) => {\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n\n        }\n      });\n  };\n};\n\n/**\n *\n * @param {idProv} type int\n * @returns list Of Kabupaten\n */\n\nexport const setDataDropdownKabupatenAction = (type, idProv) => {\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetKabupatens?IdProvinsi=${idProv}`\n      )\n      .then((res) => {\n        let data = res.data;\n        if(data.isSuccess){\n           dispatch({ type, payload: data.data })\n        }else{\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n          dispatch({ type: \"DATA_CMB_KAB_REST\" });\n        }\n      });\n  };\n};\n\n/**\n *\n * @param {idKab} type int\n * @returns list Of Kabupaten\n */\n\nexport const setDataDropdownKecamatanAction = (type, idKab) => {\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetKecamatans?IdKabupaten=${idKab}`\n      )\n      .then((res) => {\n        let data = res.data;\n        if(data.isSuccess){\n          dispatch({ type, payload: data.data })\n        }else{\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\"); dispatch({ type: \"DATA_CMB_RESET\" });\n        }\n      });\n  };\n};\n\nexport const SetJenisVariabel = (type) => {\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/GetJenisVariabel`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let result = res.data;\n        if (result.isSuccess) {\n          dispatch({ type, payload: result.data });\n        } else {\n          Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/**\n * @param {}\n * @returns list of jenis lokpri\n */\nexport const SetDropdownJenisLokpriAction = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterJenisLokpri}/GetJenisLokpris`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/**\n * @param {}\n * @returns list of jenis lokpri\n */\nexport const SetDropdownJenisLokpriParseAction = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterJenisLokpri}/GetJenisLokpris`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n           var arrTmp = [];\n           data.data.map((v, i) => {\n             arrTmp.push({\n               value: v.idJenisLokpri,\n               label: v.nama,\n             });\n           });\n           dispatch({ type, payload: arrTmp });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\n\n/**\n * @param {}\n * @returns list of roles\n */\nexport const SetDropdownRolesAction = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/GetRoles`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          let tmpArr = [];\n          data.data.map((v, i) => {\n            tmpArr.push({\n              value: v.idRole,\n              label: v.roleName\n            });\n          })\n          dispatch({ type, payload: tmpArr });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n/**\n * @param {}\n * @returns list of Jabatan\n */\nexport const SetDropdownPgwKecamatansByKecamatanAction = (type, idKec) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetPegawaiKecamatansByKecamatan?IdKecamatan=${idKec}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          let tmpArr = [];\n          tmpArr.push({\n            value: 0,\n            label : \" -- Pilih -- \"\n          })\n          data.data.map((v, i) => {\n            tmpArr.push({\n              value: v.idJabatan,\n              label: v.jabatan,\n            });\n          });\n          dispatch({ type, payload: tmpArr });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/**\n *\n * @param {*}\n * @param {*}\n * @returns LIST JABATAN\n */\nexport const SetDropdownJabatanAction =(type) =>{\n  return(dispatch)=> {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetJabatans`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n           let tmpArr = [];\n           tmpArr.push({\n             value: 0,\n             label: \" -- Pilih -- \",\n           });\n           data.data.map((v, i) => {\n             tmpArr.push({\n               value: v.idJabatan,\n               label: v.nama,\n             });\n           });\n          dispatch({ type, payload: tmpArr });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  }\n}\n\nexport const SetDropdownJabatan1Action = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetJabatans`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\n\nexport const SetDropdownPgwKecamatansByJabatanAction = (type, idJabatan,idKecamatan) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetPegawaiKecamatansByJabatan?IdJabatan=${idJabatan}&IdKecamatan=${idKecamatan}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          let tmpArr = [];\n          tmpArr.push({\n            value: 0,\n            label: \" -- Pilih -- \",\n          });\n          data.data.map((v, i) => {\n            tmpArr.push({\n              value: v.idPegawai,\n              label: v.fullName,\n            });\n          });\n          dispatch({ type, payload: tmpArr });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n","import { http } from \"src/common/helper\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n\nexport const setFormKab = (formType, formValue) => {\n  return { type: \"ADD_KAB\", formType, formValue };\n};\n\n\nexport const GetKabupatens = (type, IdProvinsi) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetKabupatens?IdProvinsi=${IdProvinsi}`\n      )\n      .then((res) => {\n          loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const GetKabupatenById = (idKabupaten) => {\n\n  return(dispatch) =>{\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_KAB\" });\n    http.get(\n      `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetKabupaten?IdKabupaten=${idKabupaten}`\n    ).then(res =>{\n      loadingStatus(false);\n      let dataKab = res.data;\n      if (dataKab.isSuccess) {\n        dispatch(setFormKab(\"IdKabupaten\", idKabupaten));\n        dispatch(setFormKab(\"IdProvinsi\", dataKab.data.idProvinsi));\n        dispatch(setFormKab(\"Kode\", dataKab.data.kode));\n        dispatch(setFormKab(\"Nama\", dataKab.data.nama));\n          dispatch({ type: \"MODAL_KAB\", payload: true });\n      }else{\n          Swal.fire(\"Gagal\", `${dataKab.ReturnMessage}`, \"error\");\n      }\n    });\n  }\n}\n\nexport const PostKabupaten = (data) => {\n  return(dispatch) => {\n    loadingStatus(true);\n    let param = `?IdProvinsi=${data.IdProvinsi}&Kode=${data.Kode}&Nama=${data.Nama}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/AddKabupaten${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_KAB\", payload: false });\n          dispatch({ type: \"RESET_FORM_KAB\" });\n          GetKabupatens(\"GET_KABUPATENS\", data.IdProvinsi);\n\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n\n  }\n}\n\nexport const UpdateKabupaten = (data) => {\n\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/EditKabupaten`,\n        data\n      )\n      .then((res) => {\n        if(res.data.isSuccess){\n            dispatch({ type: \"MODAL_KAB\", payload: false });\n            dispatch(GetKabupatens(\"GET_KABUPATENS\", data.IdProvinsi));\n        }else{\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n\n      });\n  }\n}\n\nexport const DeleteKabupaten = (idKabupaten, namaKab, idProv) =>{\n\n  return(dispatch) =>{\n      Swal.fire({\n        title: \"Apakah anda yakin?\",\n        text: `Akan menghapus Kabupaten ${namaKab}`,\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Ya, Akan Menghapus\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          http\n            .post(\n              `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/DeleteKabupaten?IdKabupaten=${idKabupaten}`\n            )\n            .then((res) => {\n              let result = res.data;\n              if (result.isSuccess) {\n                Swal.fire(`Sukses`,`Data ${namaKab} berhasil dihapus`,`success`);\n                 dispatch({ type: \"RESET_FORM_KAB\" });\n                 dispatch(GetKabupatens(\"GET_KABUPATENS\", idProv));\n              } else {\n                Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n              }\n            });\n\n        }\n      });\n  }\n}\n\n\n","\nimport { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n/**\n * set change input modal kecukupan\n * @param {*} type\n * @returns\n */\nexport const setFormKecukupanAction = (formType, formValue) => {\n  return { type: \"ADD_KECUKUPAN\", formType, formValue };\n};\n\n/**\n * set change input modal ketersediaan\n * @param {*} type\n * @returns\n */\n\nexport const setFormKetersediaanAction = (formType, formValue) => {\n  return { type: \"ADD_KETERSEDIAAN\", formType, formValue };\n};\n\n/**\n * set change input modal ketersediaan\n * @param {*} type\n * @returns\n */\n\nexport const setFormKondisiAction = (formType, formValue) => {\n  return { type: \"ADD_KONDISI\", formType, formValue };\n};\n\n\nexport const GetBobotKecukupan = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKecukupans`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\nexport const GetBobotKetersediaanAction = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKetersediaans`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const GetBobotKondisiAction = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKondisis`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const PostBobotKecukupanAction = (data) =>{\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return(dispatch)=>{\n    loadingStatus(true);\n    let param = `?IdUser=${idUser}&Nama=${data.Nama}&Bobot=${data.Bobot}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/AddBobotKecukupan${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_KECUKUPAN\", payload: false });\n          dispatch({ type: \"RESET_FORM_KECUKUPAN\" });\n          dispatch(GetBobotKecukupan(\"GET_LIST_KECUKUPAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  }\n}\n\nexport const PostBobotKetersediaanAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(true);\n    let param = `?IdUser=${idUser}&Nama=${data.Nama}&Bobot=${data.Bobot}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/AddBobotKetersediaan${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_KETERSEDIAAN\", payload: false });\n          dispatch({ type: \"RESET_FORM_KETERSEDIAAN\" });\n          dispatch(GetBobotKetersediaanAction(\"GET_LIST_KETERSEDIAAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const PostBobotKondisiAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(true);\n    let param = `?IdUser=${idUser}&Nama=${data.Nama}&Bobot=${data.Bobot}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/AddBobotKondisi${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_KONDISI\", payload: false });\n          dispatch({ type: \"RESET_FORM_KONDISI\" });\n          dispatch(GetBobotKondisiAction(\"GET_LIST_KONDISI\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const SetBobokKecukupanByIdAction = (id) =>{\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_KAB\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKecukupan?Id=${id}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(setFormKecukupanAction(\"Id\", id));\n          dispatch(setFormKecukupanAction(\"Nama\", data.data.nama));\n          dispatch(setFormKecukupanAction(\"Bobot\", data.data.bobot));\n          dispatch({ type: \"MODAL_KECUKUPAN\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n}\n\nexport const SetBobotKetersediaanByIdAction = (id) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_KETERSEDIAAN\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKetersediaan?Id=${id}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(setFormKetersediaanAction(\"Id\", id));\n          dispatch(setFormKetersediaanAction(\"Nama\", data.data.nama));\n          dispatch(setFormKetersediaanAction(\"Bobot\", data.data.bobot));\n          dispatch({ type: \"MODAL_KETERSEDIAAN\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const SetBobotKondisiByIdAction = (id) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_KONDISI\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKondisi?Id=${id}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(setFormKondisiAction(\"Id\", id));\n          dispatch(setFormKondisiAction(\"Nama\", data.data.nama));\n          dispatch(setFormKondisiAction(\"Bobot\", data.data.bobot));\n          dispatch({ type: \"MODAL_KONDISI\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const UpdateBobotKecukupanAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/EditBobotKecukupan?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_KECUKUPAN\", payload: false });\n         dispatch(GetBobotKecukupan(\"GET_LIST_KECUKUPAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const UpdateBobotKetersediaanAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/EditBobotKetersediaan?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_KETERSEDIAAN\", payload: false });\n          dispatch(GetBobotKetersediaanAction(\"GET_LIST_KETERSEDIAAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\nexport const UpdateBobotKondisiAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/EditBobotKondisi?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_KONDISI\", payload: false });\n          dispatch(GetBobotKondisiAction(\"GET_LIST_KONDISI\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\nexport const DeleteKecukupanAction = (id, nama) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus Bobot ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/DeleteBobotKecukupan?IdUser=${idUser}&Id=${id}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${nama} berhasil dihapus`, `success`);\n              dispatch({ type: \"RESET_FORM_KECUKUPAN\" });\n               dispatch(GetBobotKecukupan(\"GET_LIST_KECUKUPAN\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n\nexport const DeleteKetersediaanAction = (id, nama) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus Bobot ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/DeleteBobotKetersediaan?IdUser=${idUser}&Id=${id}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${nama} berhasil dihapus`, `success`);\n              dispatch({ type: \"RESET_FORM_KETERSEDIAAN\" });\n              dispatch(GetBobotKetersediaanAction(\"GET_LIST_KETERSEDIAAN\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n\n\nexport const DeleteKondisiAction = (id, nama) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus Bobot ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/DeleteBobotKondisi?IdUser=${idUser}&Id=${id}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${nama} berhasil dihapus`, `success`);\n              dispatch({ type: \"RESET_FORM_KONDISI\" });\n              dispatch(GetBobotKondisiAction(\"GET_LIST_KONDISI\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n","import { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n\nexport const setFormJabatanAction = (formType, formValue) => {\n  return { type: \"ADD_JABATAN\", formType, formValue };\n};\n\nexport const GetDataJabatanAction = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetJabatans`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const PostJabatanAction = (data) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    //let idUser = sessionStorage.getItem(\"idUser\");\n    let param = `?Kode=${data.Kode}&Nama=${data.Nama}&Presentase=${data.Presentase}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/AddJabatan${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_JABATAN\", payload: false });\n          dispatch({ type: \"RESET_FORM_JABATAN\" });\n         dispatch(GetDataJabatanAction(\"GET_LIST_JABATAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\nexport const setJabatanIdAction = (idJabatan) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_JABATAN\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetJabatan?IdJabatan=${idJabatan}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(setFormJabatanAction(\"IdJabatan\", idJabatan));\n          dispatch(\n            setFormJabatanAction(\"Kode\", data.data.kode)\n          );\n          dispatch(setFormJabatanAction(\"Nama\", data.data.nama));\n          dispatch({ type: \"MODAL_JABATAN\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/**\n *\n * @param {*} json (data)\n * @returns\n */\nexport const UpdateJabatanAction = (data) => {\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/EditJabatan`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_JABATAN\", payload: false });\n          dispatch({ type: \"RESET_FORM_JABATAN\" });\n          dispatch(GetDataJabatanAction(\"GET_LIST_JABATAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n}\n\n\nexport const DeleteJabatanAction = (id, nama) => {\n  //let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus Jabatan ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/DeleteJabatan?IdJabatan=${id}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${nama} berhasil dihapus`, `success`);\n               dispatch({ type: \"MODAL_JABATAN\", payload: false });\n               dispatch({ type: \"RESET_FORM_JABATAN\" });\n               dispatch(GetDataJabatanAction(\"GET_LIST_JABATAN\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n","import { http } from \"src/common/helper\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n/**\n *\n * @param {idKab} type int\n * @returns list Of Kabupaten\n */\nexport const GeKecamatanByIdKabupatenAction = (type, idKab) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetKecamatans?IdKabupaten=${idKab}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/**\n *\n * @param {} type\n * @returns get onchange each komponen form\n */\n\nexport const setFormKecAction = (formType, formValue) => {\n  return { type: \"ADD_KECAMATAN\", formType, formValue };\n};\n\n/**\n * @param{data} objcet formkecamat\n * @returns\n */\n\nexport const prosesKecamatanAddAction = (data) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    let param = `?IdKabupaten=${data.IdKabupaten}&Kode=${data.Kode}&Nama=${data.Nama}&Alamat=${data.Alamat}&Longitude=${data.Longitude}&Latitude=${data.Latitude}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/AddKecamatan${param}`\n      )\n      .then((res) => {\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_KEC\", payload: false });\n          dispatch({ type: \"RESET_FORM_KEC\" });\n          dispatch(\n            GeKecamatanByIdKabupatenAction(\"GET_KECAMATANS\", data.IdKabupaten)\n          );\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/**\n * @param{idKec} int idKec\n * @returns Kecamatan by Id\n */\nexport const GetKecamatanByIdKecamatanAction = (idKecamata) => {\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetKecamatan?IdKecamatan=${idKecamata}`\n      )\n      .then((res) => {\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(setFormKecAction(\"IdKecamatan\",data.data.idKecamatan));\n          dispatch(setFormKecAction(\"Kode\",data.data.kode));\n          dispatch(setFormKecAction(\"Nama\",data.data.nama));\n          dispatch(setFormKecAction(\"Alamat\",data.data.alamat));\n          dispatch(setFormKecAction(\"IdKabupaten\",data.data.idKabupaten));\n          dispatch(setFormKecAction(\"Longitude\",data.data.longitude));\n          dispatch(setFormKecAction(\"Latitude\",data.data.latitude));\n          dispatch({ type: \"MODAL_KEC\",payload:true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/**\n * @param{objeForm Kecamata} object Kecamatan form\n * @returns\n */\nexport const prosesKecamatanEditAction = (data)=>{\n\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/EditKecamatan`,\n        data\n      )\n      .then((res) => {\n        let data = res.data;\n        if (res.data.isSuccess) {\n\n          Swal.fire(\"Berhasil\", `Anda telah berhasil merubah data`, \"success\");\n          dispatch({ type: \"MODAL_KEC\", payload: false });\n          dispatch(\n            GeKecamatanByIdKabupatenAction(\"GET_KABUPATENS\", data.IdKabupaten)\n          );\n\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n}\n\n/**\n * @param{idKecamatan} int idKecamatan\n * @returns\n */\nexport const ProsesDeleteKecamatanAction = (idKecamatan, idKabupaten, nama) => {\n  console.log(idKecamatan)\n  return(dispatch) =>{\n      Swal.fire({\n        title: \"Apakah anda yakin?\",\n        text: `Akan menghapus Kecamatan ${nama}`,\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Ya, Akan Menghapus\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          http\n            .post(\n              `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/DeleteKecamatan?IdKecamatan=${idKecamatan}`\n            )\n            .then((res) => {\n              let result = res.data;\n              if (result.isSuccess) {\n                Swal.fire(`Sukses`,`Data ${nama} berhasil dihapus`,`success`);\n                 dispatch({ type: \"RESET_FORM_KAB\" });\n                 dispatch(GeKecamatanByIdKabupatenAction(\"GET_KECAMATANS\", idKabupaten));\n              } else {\n                Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n              }\n            });\n\n        }\n      });\n  }\n}\n","import { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n\nexport const setFormUserAction = (formType, formValue) => {\n  return { type: \"ADD_USER\", formType, formValue };\n};\n\n/**\n * @param {}\n * @result List of users\n * Description get api users\n */\n\nexport const GetUsersAPIAction = (type) => {\n  return (dispatch) => {\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/GetUsers`\n      )\n      .then((res) => {\n        let data = res.data\n        if(data.isSuccess) {\n          let tmpArr = [];\n          data.data.map((value, index) => {\n\n            var roleNameTmp =\n              \" \" +\n              value.roles\n                .map(function (i) {\n                  return i.roleName;\n                })\n                .join(\" || \");\n            tmpArr.push({\n              idUser: value.idUser,\n              lastLogin: value.lastLogin,\n              fullName: value.fullName,\n              strStatus: value.strStatus,\n              username: value.username,\n              password: value.password,\n              email: value.email,\n              firstName: value.firstName,\n              middleName: value.middleName,\n              lastName: value.lastName,\n              address: value.address,\n              phoneNumber: value.phoneNumber,\n              mobileNumber: value.mobileNumber,\n              fileImage: value.fileImage,\n              roleName :roleNameTmp\n            });\n          });\n           dispatch({type, payload: tmpArr});\n        }else{\n           Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const GetUserAPIByIdUserAction = (idUser) => {\n\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_USER\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/GetUser?IdUser=${idUser}`\n      )\n      .then((result) => {\n        loadingStatus(false);\n        let data = result.data;\n        if (data.isSuccess) {\n          dispatch(setFormUserAction(\"Username\", data.data.username));\n          dispatch(setFormUserAction(\"IdUser\", data.data.idUser));\n          dispatch(setFormUserAction(\"Email\", data.data.email));\n          dispatch(setFormUserAction(\"FirstName\", data.data.firstName));\n          dispatch(setFormUserAction(\"MiddleName\", data.data.middleName));\n          dispatch(setFormUserAction(\"LastName\", data.data.lastName));\n          dispatch(setFormUserAction(\"Address\", data.data.address));\n          dispatch(setFormUserAction(\"PhoneNumber\", data.data.phoneNumber));\n          dispatch(setFormUserAction(\"MobileNumber\", data.data.mobileNumber));\n           var rolesTmpArr = [];\n           data.data.roles.map((v, i) => {\n             rolesTmpArr.push({\n               value: v.idRole,\n               label: v.roleName,\n             });\n           });\n\n           dispatch(setFormUserAction(\"Roles\", rolesTmpArr));\n            dispatch({ type: \"MODAL_USER\", payload: true });\n\n        } else {\n           Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  }\n}\n\nexport const AddUserAPIAction = (data) => {\n   let idUser = sessionStorage.getItem(\"idUser\");\n  return(dispatch) => {\n    loadingStatus(true)\n    let dataNewValue = {...data}\n    let tmpRoles = [];\n    data.Roles.map((v) => {\n      tmpRoles.push({\n        IdRole: v.value,\n      });\n    });\n    dataNewValue[\"Roles\"] = tmpRoles;\n    data = dataNewValue;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/AddUser?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_USER\", payload: false });\n          dispatch({ type: \"RESET_FORM_USER\" });\n          dispatch(GetUsersAPIAction(\"GET_USER_LIST\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  }\n}\n\nexport const SetUserInActiveAction = (idUserParam, fullName) => {\n   let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n     Swal.fire({\n       title: \"Apakah anda yakin?\",\n       text: `Akan Non aktifkan ${fullName}`,\n       icon: \"warning\",\n       showCancelButton: true,\n       confirmButtonColor: \"#3085d6\",\n       cancelButtonColor: \"#d33\",\n       confirmButtonText: \"Ya, Akan Nonaktif\",\n     }).then((result) => {\n       if (result.isConfirmed) {\n         http\n           .post(\n             `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/SetUserInActive?IdUser=${idUser}&SetIdUser=${idUserParam}`\n           )\n           .then((res) => {\n             let result = res.data;\n             if (result.isSuccess) {\n               Swal.fire(\n                 `Sukses`,\n                 `Data ${fullName} berhasil nonaktif`,\n                 `success`\n               );\n               dispatch({ type: \"RESET_FORM_USER\" });\n               dispatch(GetUsersAPIAction(\"GET_USER_LIST\"));\n             } else {\n               Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n             }\n           });\n       }\n     });\n  }\n};\n\nexport  const SetUserActiveAction = (idUserParam, fullName) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan Mengaktifkan ${fullName}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Aktifkan\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/SetUserActive?IdUser=${idUser}&SetIdUser=${idUserParam}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${fullName} berhasil Aktif`, `success`);\n              dispatch({ type: \"RESET_FORM_USER\" });\n              dispatch(GetUsersAPIAction(\"GET_USER_LIST\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n\n\nexport const UpdateUserAPIAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(true);\n    let dataNewValue = { ...data };\n    let tmpRoles = [];\n    data.Roles.map((v) => {\n      tmpRoles.push({\n        IdRole: v.value,\n      });\n    });\n    dataNewValue[\"Roles\"] = tmpRoles;\n    data = dataNewValue;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/EditUser?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil merubah data`, \"success\");\n          dispatch({ type: \"MODAL_USER\", payload: false });\n          dispatch({ type: \"RESET_FORM_USER\" });\n          dispatch(GetUsersAPIAction(\"GET_USER_LIST\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n","import { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n/**\n * @param {idAppl}\n * @result list menu\n * descrtion set toi datatable\n */\n\n\nexport const GetMenuListAction = (type, idApp) => {\n  return(dispatch) => {\n    loadingStatus(true)\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/GetApplTasks?IdAppl=${idApp}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  }\n};\n","import { http } from \"src/common/helper\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\nexport const SetPegawaiChangedAction = (formType, formValue) => {\n  return { type: \"SET_CHANGE_NAME\", formType, formValue };\n};\n\nexport const SetFirstFormAction = (formType, formValue) => {\n  return { type: \"SET_FIRST_ADD_FORM_MONEV\", formType, formValue };\n};\nexport const GetPegawiKecamatanAction = (idPegawai) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetPegawaiKecamatan?IdPegawai=${idPegawai}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(SetFirstFormAction(\"IdPegawai\", data.data.idUser));\n          dispatch(SetPegawaiChangedAction(\"FullName\", data.data.fullName));\n          dispatch(\n            SetPegawaiChangedAction(\"MobileNumber\", data.data.mobileNumber)\n          );\n          dispatch(SetPegawaiChangedAction(\"Email\", data.data.email));\n          dispatch(\n            SetPegawaiChangedAction(\"OfficeAddress\", data.data.officeAddress)\n          );\n        } else {\n           dispatch(SetFirstFormAction(\"IdPegawai\", 0));\n           dispatch(SetPegawaiChangedAction(\"FullName\", \"\"));\n           dispatch(\n             SetPegawaiChangedAction(\"MobileNumber\", \"\")\n           );\n           dispatch(SetPegawaiChangedAction(\"Email\", \"\"));\n           dispatch(\n             SetPegawaiChangedAction(\"OfficeAddress\", \"\")\n           );\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n\n        }\n      });\n  };\n};\n\nexport const saveToTemporaryAction = ( idPegawai, idJenisLokpri) =>{\n\n  return (dispatch) => {\n    loadingStatus(true);\n    let idUser = sessionStorage.getItem(\"idUser\");\n\n    let param = `?IdUser=${idUser}&IdPegawai=${idPegawai}&IdJenisLokpri=${idJenisLokpri}`;\n    http.post(\n      `${process.env.REACT_APP_ROOT_API}${serviceName.svcMonev}/AddMonev${param}`\n    ).then(res => {\n      loadingStatus(false);\n      let results = res.data;\n      if (results.isSuccess) {\n        let resultData = results.data;\n\n        if(resultData.isEdit){\n          Swal.fire({\n              title: \"\",\n              text: \"Anda sudah menginputkan data sebelumnya, lanjutkan mengedit ?\",\n              icon: \"info\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: \"Oke\",\n              cancelButtonText: \"Batal\",\n            })\n            .then((resultConfm) => {\n              if(resultConfm.isConfirmed){\n                dispatch({ type: \"FORM_INPUT_FIRST\", payload:true });\n                dispatch({\n                  type: \"GET_RESULT_ADD_TEMPORARY\",\n                  payload: resultData,\n                });\n              }else{\n                   dispatch({ type: \"FORM_INPUT_FIRST\", payload: false });\n              }\n            });\n        }else{\n          dispatch({ type: \"FORM_INPUT_FIRST\", payload: true });\n            dispatch({\n              type: \"GET_RESULT_ADD_TEMPORARY\",\n              payload: resultData,\n            });\n        }\n      } else {\n        Swal.fire(\"Gagal\", `${results.returnMessage}`, \"error\");\n      }\n    });\n  }\n}\n\n\nexport const SetGetJawabanLastAction = (\n  idMonev,\n  idVariabel,\n  idIndikator,\n  dataJawaban\n) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    let idUser = sessionStorage.getItem(\"idUser\");\n    let param = `?IdUser=${idUser}&IdMonev=${idMonev}&IdVariabel=${idVariabel}&IdIndikator=${idIndikator}`;\n    console.log(param);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMonev}/SetGetJawaban${param}`,\n        dataJawaban\n      )\n      .then((res) => {\n        loadingStatus(false);\n        console.log(res.data);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\n            \"Berhasil\",\n            `Selamat Anda Sudah berhasil input monev`,\n            \"success\"\n          );\n          dispatch({ type: \"FORM_INPUT_FIRST\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n","import { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n/**\n *\n * @param {*} type\n * @param {*} idVariabel\n * @returns\n */\nexport const setFormIndikatorAction = (formType, formValue) => {\n  return { type: \"ADD_INDIKATOR\", formType, formValue };\n};\n\n/**\n * @param{idVariabel}\n * @return LISTOFIndikator\n */\n\nexport const GetIndikatorsAction = (type, idVariabel) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcIndikators}/GetIndikatorByIdVariabels?IdVariabel=${idVariabel}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type: \"NAMA_VARIABEL\", payload: data.data.variabel });\n          dispatch({ type, payload: data.data.indikators });\n        } else {\n          Swal.fire(\"\", `${data.returnMessage}  `, \"warning\");\n        }\n      });\n  };\n};\n\nexport const GetIndikatorByIdAction = (idIndikator) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcIndikators}/GetIndikator?IdIndikator=${idIndikator}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          console.log(data.data);\n          dispatch(\n            setFormIndikatorAction(\"IdIndikator\", data.data.idIndikator)\n          );\n          dispatch(\n            setFormIndikatorAction(\n              \"IdVariabel\",\n              data.data.idVariabel\n            )\n          );\n          dispatch(setFormIndikatorAction(\"Nama\", data.data.nama));\n          dispatch(setFormIndikatorAction(\"Type\", data.data.type));\n          dispatch({ type: \"MODAL_INDIKATOR\", payload: true });\n        } else {\n          Swal.fire(\"\", `${data.returnMessage}  `, \"warning\");\n        }\n      });\n  };\n};\n\n/**\n * POST INDIKATOR\n */\n\nexport const PostIndikatorAction = (data) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    let idUser = sessionStorage.getItem(\"idUser\");\n    let idVariabel = data.IdVariabel;\n    let param = `?IdUser=${idUser}&IdVariabel=${data.IdVariabel}&Nama=${data.Nama}&Type=${data.Type}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcIndikators}/AddIndikator${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_INDIKATOR\", payload: false });\n          dispatch({ type: \"RESET_FORM_INDIKATOR\" });\n          dispatch(GetIndikatorsAction(\"GET_INDIKATORS\", idVariabel));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/**\n * Update\n */\n\nexport const UpdateIndikatorAction = (data) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    let idUser = sessionStorage.getItem(\"idUser\");\n    let idVariabel = data.IdVariabel;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcIndikators}/EditIndikator?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_INDIKATOR\", payload: false });\n          dispatch({ type: \"RESET_FORM_INDIKATOR\" });\n          dispatch(GetIndikatorsAction(\"GET_INDIKATORS\", idVariabel));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\nexport const DeleteIndikator = (idIndikator, nama, idVariabel) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus Indikator ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcIndikators}/DeleteIndikator?IdUser=${idUser}&IdIndikator=${idIndikator}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${nama} berhasil dihapus`, `success`);\n              dispatch({ type: \"RESET_FORM_INDIKATOR\" });\n              dispatch(GetIndikatorsAction(\"GET_INDIKATORS\", idVariabel));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n","\nimport { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n/**\n *\n * @param {*} type\n * @param {*} idVariabel\n * @returns\n */\nexport const setFormPertanyaanAction = (formType, formValue) => {\n  return { type: \"ADD_PERTANYAAN\", formType, formValue };\n};\n\n\nexport const GetPertanyaanAction = (type, idIndikator) => {\n  return(dispatch) => {\n      loadingStatus(true);\n      http.get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterPertanyaan}/GetPertanyaansByIdIndikators?IdIndikator=${idIndikator}`\n      ).then(res => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data.pertanyaans });\n        } else {\n          Swal.fire(\"\", `${data.returnMessage}  `, \"warning\");\n        }\n      });\n  }\n}\n","import { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\nexport const setFormUserKecAction = (formType, formValue) => {\n  console.log(formType)\n  return { type: \"ADD_USER_KEC\", formType, formValue };\n};\n\n/**\n * @param {}\n * @result List of users\n * Description get api users\n */\n\nexport const GetUsersKecAPIAction = (type) => {\n  return (dispatch) => {\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/GetUsers`\n      )\n      .then((res) => {\n        let data = res.data;\n        if (data.isSuccess) {\n          let tmpArr = [];\n          data.data.map((value, index) => {\n            var roleNameTmp =\n              \" \" +\n              value.roles\n                .map(function (i) {\n                  return i.roleName;\n                })\n                .join(\" || \");\n            tmpArr.push({\n              idUser: value.idUser,\n              lastLogin: value.lastLogin,\n              fullName: value.fullName,\n              strStatus: value.strStatus,\n              username: value.username,\n              password: value.password,\n              email: value.email,\n              firstName: value.firstName,\n              middleName: value.middleName,\n              lastName: value.lastName,\n              address: value.address,\n              phoneNumber: value.phoneNumber,\n              mobileNumber: value.mobileNumber,\n              fileImage: value.fileImage,\n              roleName: roleNameTmp,\n            });\n          });\n          dispatch({ type, payload: tmpArr });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const GetUserAPIByIdUserAction = (idUser) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_USER\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/GetUser?IdUser=${idUser}`\n      )\n      .then((result) => {\n        loadingStatus(false);\n        let data = result.data;\n        if (data.isSuccess) {\n          dispatch(setFormUserKecAction(\"Username\", data.data.username));\n          dispatch(setFormUserKecAction(\"IdUser\", data.data.idUser));\n          dispatch(setFormUserKecAction(\"Email\", data.data.email));\n          dispatch(setFormUserKecAction(\"FirstName\", data.data.firstName));\n          dispatch(setFormUserKecAction(\"MiddleName\", data.data.middleName));\n          dispatch(setFormUserKecAction(\"LastName\", data.data.lastName));\n          dispatch(setFormUserKecAction(\"Address\", data.data.address));\n          dispatch(setFormUserKecAction(\"PhoneNumber\", data.data.phoneNumber));\n          dispatch(setFormUserKecAction(\"MobileNumber\", data.data.mobileNumber));\n          var rolesTmpArr = [];\n          data.data.roles.map((v, i) => {\n            rolesTmpArr.push({\n              value: v.idRole,\n              label: v.roleName,\n            });\n          });\n\n          dispatch(setFormUserKecAction(\"Roles\", rolesTmpArr));\n          dispatch({ type: \"MODAL_USER\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const AddUserAPIKecAction = (data) => {\n\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n\n    loadingStatus(true);\n    let dataNewValue = { ...data };\n    let tmpRoles = [];\n    data.Roles.map((v) => {\n      tmpRoles.push({\n        IdRole: v.value,\n      });\n    });\n    dataNewValue[\"Roles\"] = tmpRoles;\n    data = dataNewValue;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/AddPegawaiKecamatan?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_USER\", payload: false });\n          dispatch({ type: \"RESET_FORM_USER\" });\n          dispatch(GetUsersKecAPIAction(\"GET_USER_LIST\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const SetUserInActiveKecAction = (idUserParam, fullName) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan Non aktifkan ${fullName}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Nonaktif\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/SetUserInActive?IdUser=${idUser}&SetIdUser=${idUserParam}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(\n                `Sukses`,\n                `Data ${fullName} berhasil nonaktif`,\n                `success`\n              );\n              dispatch({ type: \"RESET_FORM_USER\" });\n              dispatch(GetUsersKecAPIAction(\"GET_USER_LIST\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n\nexport const SetUserActiveKecAction = (idUserParam, fullName) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan Mengaktifkan ${fullName}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Aktifkan\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/SetUserActive?IdUser=${idUser}&SetIdUser=${idUserParam}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${fullName} berhasil Aktif`, `success`);\n              dispatch({ type: \"RESET_FORM_USER\" });\n              dispatch(GetUsersKecAPIAction(\"GET_USER_LIST\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n\nexport const UpdateUserAPIAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(true);\n    let dataNewValue = { ...data };\n    let tmpRoles = [];\n    data.Roles.map((v) => {\n      tmpRoles.push({\n        IdRole: v.value,\n      });\n    });\n    dataNewValue[\"Roles\"] = tmpRoles;\n    data = dataNewValue;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcSettingApps}/EditUser?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil merubah data`, \"success\");\n          dispatch({ type: \"MODAL_USER\", payload: false });\n          dispatch({ type: \"RESET_FORM_USER\" });\n          dispatch(GetUsersKecAPIAction(\"GET_USER_LIST\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n","import { http } from \"src/common/helper\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\nexport const getBobotKondisiAction = () => {\n  return(dispatch) => {\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKondisis`\n      )\n      .then((res) => {\n        let result = res.data;\n        if (result.isSuccess) {\n          let resultData = result.data;\n          let tidak_layak = [];\n          let cukup_layak = [];\n          let layak = [];\n\n          let bobotTdkLayakBawah = 0;\n          let bobotTdkLayakAtas = 0;\n          let bobotCukupLayakBawah = 0;\n          let bobotCukupLayakAtas = 0;\n          let bobotLayakBawah = 0;\n          let bobotLayakAtas = 0;\n          resultData.map((v, i) => {\n\n\n            if (v.nama === \"Tidak Layak Bawah\") {\n              bobotTdkLayakBawah = v.bobot;\n            } else {\n              bobotTdkLayakBawah = 10;\n            }\n            if (v.nama === \"Tidak Layak Atas\") {\n              bobotTdkLayakAtas = v.bobot;\n            } else {\n              bobotTdkLayakAtas = 50;\n            }\n\n            if (v.nama === \"Cukup Layak Bawah\") {\n              bobotCukupLayakBawah = v.bobot;\n            } else {\n              bobotCukupLayakBawah = 60;\n            }\n\n            if (v.nama === \"Cukup Layak Atas\") {\n              bobotCukupLayakAtas = v.bobot;\n            } else {\n              bobotCukupLayakAtas = 80;\n            }\n\n            if (v.nama === \"Layak Bawah\") {\n              bobotLayakBawah = v.bobot;\n            } else {\n              bobotLayakBawah = 90;\n            }\n\n            if (v.nama === \"Layak Atas\") {\n              bobotLayakAtas = v.bobot;\n            } else {\n              bobotLayakAtas = 100;\n            }\n\n\n          });\n\n            for (let i = bobotTdkLayakBawah; i <= bobotTdkLayakAtas; i++) {\n              tidak_layak.push(i);\n              i = i + 9;\n            }\n\n           for (let i = bobotLayakBawah; i <= bobotLayakAtas; i++) {\n              layak.push(i);\n              i = i + 9;\n            }\n              for (let i = bobotCukupLayakBawah; i <= bobotCukupLayakAtas; i++) {\n              cukup_layak.push(i);\n              i = i + 9;\n            }\n          dispatch({\n            type: \"BOBOT_KONDISI_TIDAK_LAYAK\",\n            payload: tidak_layak,\n          });\n          dispatch({\n            type: \"BOBOT_KONDISI_CUKUP_LAYAK\",\n            payload: cukup_layak,\n          });\n          dispatch({ type: \"BOBOT_KONDISI_LAYAK\", payload: layak });\n        }\n      });\n  }\n};\n\n\nexport const SetGetJawabanAction = (idMonev, idVariabel, idIndikator, dataJawaban) => {\n  console.log(idIndikator);\n\n  return (dispatch) => {\n    let idUser = sessionStorage.getItem(\"idUser\");\n    let param = `?IdUser=${idUser}&IdMonev=${idMonev}&IdVariabel=${idVariabel}&IdIndikator=${idIndikator}`;\n    console.log(param);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMonev}/SetGetJawaban${param}`,\n        dataJawaban\n      )\n      .then((res) => {\n        loadingStatus(false);\n        console.log(res.data);\n        let data = res.data;\n        if (data.isSuccess) {\n          console.log(data.data);\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\nexport const AddJawabanAction = (dataJawbans) => {\n  console.log(dataJawbans[0]);\n  return (dispatch) => {\n    let idUser = sessionStorage.getItem(\"idUser\");\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMonev}/AddJawaban?IdUser=${idUser}`,\n        dataJawbans[0]\n      )\n      .then((res) => {\n        loadingStatus(false);\n        console.log(res.data);\n        let data = res.data;\n        if (data.isSuccess) {\n          console.log(data.data);\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\n\n\n\n","import { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n\nexport const setFormFilterMonev = (formType, formValue) => {\n  return { type: \"FILTER_PERTANYAAN\", formType, formValue };\n};\n\nexport const GetMonevByYearAction = (type, year) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMonev}/GetMonevs?Tahun=${year}`\n      )\n      .then((res) => {\n        loadingStatus(false)\n        let result = res.data;\n        if (result.isSuccess) {\n          dispatch({ type, payload: result.data });\n        } else {\n          Swal.fire(\"\", `${result.returnMessage}  `, \"error\");\n           dispatch({ type, payload: result.data });\n        }\n      });\n  };\n};\n"],"sourceRoot":""}