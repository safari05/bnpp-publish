{"version":3,"sources":["views/dashboard/Dashboard.js"],"names":["L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","marker2x","iconUrl","marker","shadowUrl","markerShadow","am4core","am4themes_animated","Dashboard","mapRef","useRef","useState","SetValueDashboardListReducer","SetDataMapReducer","columnOfTables","setcolumnOfTables","dataTables","setdataTables","listOfYear","setListOfyear","dataDetailDatPupup","feature","layer","html","prop","properties","bindPopup","generateDashboard","year","currentYear","Date","getFullYear","pathApi","Promise","resolve","reject","loadingStatus","axios","get","process","then","result","data","error","console","log","Get","undefined","chartInput","graphInput","chartCiq","graphCiq","chartPap","graphPap","tables","dataTable","map","gJson","current","leafletElement","GeoJSON","onEachFeature","addTo","useEffect","yearNow","decrementYear","tmpArr","push","backYear","dataInput","chart","am4charts","paddingRight","category","value","jmlBlmInput","jmlInput","series1","series","dataFields","radius","dataCiq","under25","between25_75","up75","dataPap","dataTablesReduce","columnsArr","listColumn","v","str","title","fieldAlias","field","fieldName","replace","match","index","toLowerCase","toUpperCase","listData","className","onChange","event","yearValue","target","key","xs","sm","md","id","style","width","height","ref","center","zoom","url","attribution","options","headerStyle","backgroundColor","color","filtering","columns"],"mappings":"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","file":"static/js/18.adf88213.chunk.js","sourcesContent":["import {\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CRow,\n  CSelect,\n} from \"@coreui/react\";\nimport axios from 'axios';\nimport MaterialTable from \"material-table\";\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { loadingStatus } from \"src/common/redux/action\";\nimport React, { useEffect, useState, useRef } from 'react'\nimport './Dashboard.css'\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nimport marker from \"leaflet/dist/images/marker-icon.png\";\nimport marker2x from \"leaflet/dist/images/marker-icon-2x.png\";\nimport markerShadow from \"leaflet/dist/images/marker-shadow.png\";\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: marker2x,\n  iconUrl: marker,\n  shadowUrl: markerShadow,\n});\n\n\n\n\n\n\nam4core.useTheme(am4themes_animated);\n\nconst Dashboard = () => {\n   const mapRef = useRef();\n\n  const [SetDashboardListReducer, SetValueDashboardListReducer] = useState([]);\n  const [setDataMap, SetDataMapReducer] = useState([]);\n  const [columnOfTables, setcolumnOfTables] = useState([]);\n  const [dataTables, setdataTables] = useState([]);\n  const [listOfYear, setListOfyear] = useState([]);\n\n  const backYear = ()=> {\n    let yearNow = new Date().getFullYear();\n    var decrementYear = yearNow - 5;\n    let tmpArr = [];\n    for (yearNow; yearNow > decrementYear; yearNow--) {\n      tmpArr.push({\n          \"key\" : yearNow,\n          \"value\" : yearNow,\n      })\n    }\n     setListOfyear(tmpArr);\n  }\n\n  const Get = (pathApi, year) => {\n\n    const promise = new Promise((resolve, reject) =>{\n      loadingStatus(true);\n        axios.get(`${process.env.REACT_APP_ROOT_API}Mnvs/GetMonevSpasial?Tahun=${year}`)\n        .then((result) =>{\n          loadingStatus(false);\n          resolve(result.data);\n        }, (error) =>{\n          console.log(error)\n          reject(error)\n        })\n    })\n\n    return promise;\n}\n\n  const handleOnchangeYear = (event) => {\n    let yearValue = event.target.value;\n      generateDashboard(yearValue);\n  }\n\n  const dataDetailDatPupup = (feature, layer) => {\n    //var popupcontent = [];\n\n        let html = \"\";\n        html +=\n            '<table class=\"table table-striped- table-bordered table-hover table-checkable\">';\n        for (var prop in feature.properties) {\n            html += \"<tr>\";\n            html += \"<td> <strong>\" + prop + \"</strong> </td>\";\n            html += \"<td> : </td>\";\n            html += \"<td> \" + feature.properties[prop] + \" </td>\";\n            html += \"</tr>\";\n        }\n        html += \"</table>\";\n        layer.bindPopup(html);\n    }\n\n  const generateDashboard = (year) => {\n\n       let currentYear = new Date().getFullYear();\n\n         Get('',year === undefined ? currentYear : year).then(\n          result=> {\n            chartInput(result.data.graphInput);\n            chartCiq(result.data.graphCiq);\n            chartPap(result.data.graphPap);\n            SetValueDashboardListReducer(result.data);\n            tables(result.data.dataTable);\n            SetDataMapReducer(result.data.map.gJson);\n             const { current = {} } = mapRef;\n             const { leafletElement: map } = current;\n\n             const parksGeoJson = new L.GeoJSON(result.data.map.gJson, {\n               onEachFeature: dataDetailDatPupup\n             });\n\n             parksGeoJson.addTo(map);\n          }\n        )\n  }\n\n\n\n\n  useEffect(() => {\n\n      backYear();\n     generateDashboard();\n\n\n  },[]);\n  const chartInput = (dataInput) => {\n    let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\n    chart.paddingRight = 20;\n    chart.data = [\n      {\n        category: \"Belum Input\",\n        value: dataInput.jmlBlmInput,\n      },\n      {\n        category: \"Sudah Input\",\n        value: dataInput.jmlInput,\n      },\n    ];\n    console.log(chart.data);\n    let series1 = chart.series.push(new am4charts.PieSeries());\n    series1.dataFields.value = \"value\";\n    series1.dataFields.category = \"category\";\n\n    chart.radius = \"60%\";\n\n    chart = chart;\n  };\n\n  const chartCiq = (dataCiq) => {\n    let chart = am4core.create(\"chartdivCiq\", am4charts.PieChart);\n    chart.paddingRight = 20;\n\n    chart.data = [\n      {\n        category: \"Dibawah 25\",\n        value: dataCiq.under25,\n      },\n      {\n        category: \"Antara 25 s/d 75\",\n        value: dataCiq.between25_75,\n      },\n      {\n        category: \"Diatas 75\",\n        value: dataCiq.up75,\n      },\n    ];\n\n    let series1 = chart.series.push(new am4charts.PieSeries());\n    series1.dataFields.value = \"value\";\n    series1.dataFields.category = \"category\";\n\n    chart.radius = \"60%\";\n\n    chart = chart;\n  };\n\n  const chartPap = (dataPap) => {\n    let chart = am4core.create(\"chartdivPap\", am4charts.PieChart);\n    chart.paddingRight = 20;\n\n    chart.data = [\n      {\n        category: \"Dibawah 25\",\n        value: dataPap.under25,\n      },\n      {\n        category: \"Antara 25 s/d 75\",\n        value: dataPap.between25_75,\n      },\n      {\n        category: \"Diatas 75\",\n        value: dataPap.up75,\n      },\n    ];\n\n    let series1 = chart.series.push(new am4charts.PieSeries());\n    series1.dataFields.value = \"value\";\n    series1.dataFields.category = \"category\";\n\n    chart.radius = \"60%\";\n\n    chart = chart;\n  };\n\n  const tables = (dataTable) => {\n    const columns = [\n      { title: \"Kode\", field: \"kode\" },\n      { title: \"Nama Kabupaten\", field: \"nama\" },\n    ];\n\n    let dataTablesReduce = dataTable;\n\n    let columnsArr = [];\n    dataTablesReduce.listColumn.map((v) => {\n      columnsArr.push({\n        title: v.fieldAlias,\n        field: camelize(v.fieldName),\n      });\n    });\n    setcolumnOfTables(columnsArr);\n    setdataTables(dataTablesReduce.listData);\n  };\n\n  function camelize(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n      if (+match === 0) return \"\"; // or if (/\\s+/.test(match)) for white spaces\n      return index === 0 ? match.toLowerCase() : match.toUpperCase();\n    });\n  }\n  const position = [-6.200000, 106.816666];\n  return (\n    <CContainer>\n      <CRow className={\"mb-4\"}>\n        <CCol>\n          <div className={\"float-right\"}>\n            <CSelect onChange={handleOnchangeYear}>\n              {listOfYear.map((v) => (\n                <option key={v.key} value={v.key}>\n                  {v.value}\n                </option>\n              ))}\n            </CSelect>\n          </div>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol xs=\"12\" sm=\"6\" md=\"4\">\n                  <CCard>\n                    <CCardBody>\n                      <div\n                        id=\"chartdiv\"\n                        style={{ width: \"100%\", height: \"200px\" }}\n                      ></div>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n                <CCol xs=\"12\" sm=\"6\" md=\"4\">\n                  <CCard>\n                    <CCardBody>\n                      <div\n                        id=\"chartdivCiq\"\n                        style={{ width: \"100%\", height: \"200px\" }}\n                      ></div>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n                <CCol xs=\"12\" sm=\"6\" md=\"4\">\n                  <CCard>\n                    <CCardBody>\n                      <div\n                        id=\"chartdivPap\"\n                        style={{ width: \"100%\", height: \"200px\" }}\n                      ></div>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <Map ref={mapRef} center={position} zoom={4}>\n                <TileLayer\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n              </Map>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <MaterialTable\n                title=\"\"\n                options={{\n                  headerStyle: {\n                    backgroundColor: \"#01579b\",\n                    color: \"#FFF\",\n                  },\n                  filtering: true,\n                }}\n                columns={columnOfTables}\n                data={dataTables}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </CContainer>\n  );\n}\n\nexport default Dashboard\n"],"sourceRoot":""}