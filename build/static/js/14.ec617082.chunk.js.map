{"version":3,"sources":["views/dashboard/Dashboard.js","common/redux/action/loginAction.js","common/redux/action/commonAction.js","common/redux/action/masterVariabelAction.js","common/redux/action/dropdownAction.js","common/redux/action/kabupatenAction.js","common/redux/action/masterBobotAction.js","common/redux/action/masterJabatanAction.js"],"names":["L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","marker2x","iconUrl","marker","shadowUrl","markerShadow","am4core","am4themes_animated","Dashboard","mapRef","useRef","useState","SetValueDashboardListReducer","SetDataMapReducer","columnOfTables","setcolumnOfTables","dataTables","setdataTables","listOfYear","setListOfyear","dataDetailDatPupup","feature","layer","html","prop","properties","bindPopup","generateDashboard","year","currentYear","Date","getFullYear","pathApi","Promise","resolve","reject","loadingStatus","axios","get","process","then","result","data","error","console","log","Get","undefined","chartInput","graphInput","chartCiq","graphCiq","chartPap","graphPap","tables","dataTable","map","gJson","current","leafletElement","GeoJSON","onEachFeature","addTo","useEffect","yearNow","decrementYear","tmpArr","push","backYear","dataInput","chart","am4charts","paddingRight","category","value","jmlBlmInput","jmlInput","series1","series","dataFields","radius","dataCiq","under25","between25_75","up75","dataPap","dataTablesReduce","columnsArr","listColumn","v","str","title","fieldAlias","field","fieldName","replace","match","index","toLowerCase","toUpperCase","listData","className","onChange","event","yearValue","target","key","xs","sm","md","id","style","width","height","ref","center","zoom","url","attribution","options","headerStyle","backgroundColor","color","filtering","columns","setFormLogin","formType","formValue","type","apiLogin","iData","dispatch","http","UsernameOrEmail","Password","res","isSuccess","sessionStorage","setItem","idUser","Swal","fire","window","location","returnMessage","bool","showConfirmButton","onBeforeOpen","showLoading","onAfterClose","hideLoading","allowOutsideClick","allowEscapeKey","allowEnterKey","close","setFormVariabel","GetDataVariabel","serviceName","svcMasterVariabel","payload","ReturnMessage","setVariabelId","idVariabel","idJenisVariabel","nama","presentase","PostVariabel","getItem","param","IdJenisVariabel","Nama","Presentase","post","UpdateVariabel","DeleteVariabel","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","setDataComboProv","svcMasterWillOrgs","SetJenisVariabel","setFormKab","GetKabupatens","IdProvinsi","GetKabupatenById","idKabupaten","dataKab","idProvinsi","kode","PostKabupaten","Kode","UpdateKabupaten","DeleteKabupaten","namaKab","idProv","setFormKecukupanAction","setFormKetersediaanAction","setFormKondisiAction","GetBobotKecukupan","svcBobot","GetBobotKetersediaanAction","GetBobotKondisiAction","PostBobotKecukupanAction","Bobot","PostBobotKetersediaanAction","PostBobotKondisiAction","SetBobokKecukupanByIdAction","bobot","SetBobotKetersediaanByIdAction","SetBobotKondisiByIdAction","UpdateBobotKecukupanAction","UpdateBobotKetersediaanAction","UpdateBobotKondisiAction","DeleteKecukupanAction","DeleteKetersediaanAction","DeleteKondisiAction","setFormJabatanAction","GetDataJabatanAction","PostJabatanAction","setJabatanIdAction","idJabatan","UpdateJabatanAction","DeleteJabatanAction"],"mappings":"0aA8BOA,IAAEC,KAAKC,QAAQC,UAAUC,YAEhCJ,IAAEC,KAAKC,QAAQG,aAAa,CAC1BC,cAAeC,IACfC,QAASC,IACTC,UAAWC,MAQbC,IAAiBC,KAwSFC,UAtSG,WACf,IAAMC,EAASC,mBADM,EAG0CC,mBAAS,IAHnD,mBAGUC,GAHV,aAIkBD,mBAAS,IAJ3B,mBAIHE,GAJG,aAKsBF,mBAAS,IAL/B,mBAKfG,EALe,KAKCC,EALD,OAMcJ,mBAAS,IANvB,mBAMfK,EANe,KAMHC,EANG,OAOcN,mBAAS,IAPvB,mBAOfO,EAPe,KAOHC,EAPG,KA4ChBC,EAAqB,SAACC,EAASC,GAG/B,IAAIC,EAAO,GAGX,IAAK,IAAIC,KAFTD,GACI,kFACaF,EAAQI,WACrBF,GAAQ,OACRA,GAAQ,gBAAkBC,EAAO,kBACjCD,GAAQ,eACRA,GAAQ,QAAUF,EAAQI,WAAWD,GAAQ,SAC7CD,GAAQ,QAEZA,GAAQ,WACRD,EAAMI,UAAUH,IAGhBI,EAAoB,SAACC,GAEtB,IAAIC,GAAc,IAAIC,MAAOC,eAzCtB,SAACC,EAASJ,GAcpB,OAZgB,IAAIK,SAAQ,SAACC,EAASC,GACpCC,aAAc,GACZC,IAAMC,IAAN,UAAaC,iCAAb,sCAAyEX,IACxEY,MAAK,SAACC,GACLL,aAAc,GACdF,EAAQO,EAAOC,SACd,SAACC,GACFC,QAAQC,IAAIF,GACZR,EAAOQ,UAiCRG,CAAI,OAAWC,GAARnB,EAAoBC,EAAcD,GAAMY,MAC9C,SAAAC,GACEO,EAAWP,EAAOC,KAAKO,YACvBC,EAAST,EAAOC,KAAKS,UACrBC,EAASX,EAAOC,KAAKW,UACrBzC,EAA6B6B,EAAOC,MACpCY,EAAOb,EAAOC,KAAKa,WACnB1C,EAAkB4B,EAAOC,KAAKc,IAAIC,OAN3B,MAOmBhD,EAAjBiD,QACgBF,QARlB,MAOY,GAPZ,GAQEG,eAEa,IAAIjE,IAAEkE,QAAQnB,EAAOC,KAAKc,IAAIC,MAAO,CACxDI,cAAezC,IAGJ0C,MAAMN,OAQ9BO,qBAAU,YA/EO,WAIf,IAHA,IAAIC,GAAU,IAAIlC,MAAOC,cACrBkC,EAAgBD,EAAU,EAC1BE,EAAS,GACCF,EAAUC,EAAeD,IACrCE,EAAOC,KAAK,CACR,IAAQH,EACR,MAAUA,IAGf7C,EAAc+C,GAuEbE,GACDzC,MAGD,IACF,IAAMqB,EAAa,SAACqB,GAClB,IAAIC,EAAQhE,IAAe,WAAYiE,KACvCD,EAAME,aAAe,GACrBF,EAAM5B,KAAO,CACX,CACE+B,SAAU,cACVC,MAAOL,EAAUM,aAEnB,CACEF,SAAU,cACVC,MAAOL,EAAUO,WAIrB,IAAIC,EAAUP,EAAMQ,OAAOX,KAAK,IAAII,KACpCM,EAAQE,WAAWL,MAAQ,QAC3BG,EAAQE,WAAWN,SAAW,WAE9BH,EAAMU,OAAS,MAEfV,EAAQA,GAGJpB,EAAW,SAAC+B,GAChB,IAAIX,EAAQhE,IAAe,cAAeiE,KAC1CD,EAAME,aAAe,GAErBF,EAAM5B,KAAO,CACX,CACE+B,SAAU,aACVC,MAAOO,EAAQC,SAEjB,CACET,SAAU,mBACVC,MAAOO,EAAQE,cAEjB,CACEV,SAAU,YACVC,MAAOO,EAAQG,OAInB,IAAIP,EAAUP,EAAMQ,OAAOX,KAAK,IAAII,KACpCM,EAAQE,WAAWL,MAAQ,QAC3BG,EAAQE,WAAWN,SAAW,WAE9BH,EAAMU,OAAS,MAEfV,EAAQA,GAGJlB,EAAW,SAACiC,GAChB,IAAIf,EAAQhE,IAAe,cAAeiE,KAC1CD,EAAME,aAAe,GAErBF,EAAM5B,KAAO,CACX,CACE+B,SAAU,aACVC,MAAOW,EAAQH,SAEjB,CACET,SAAU,mBACVC,MAAOW,EAAQF,cAEjB,CACEV,SAAU,YACVC,MAAOW,EAAQD,OAInB,IAAIP,EAAUP,EAAMQ,OAAOX,KAAK,IAAII,KACpCM,EAAQE,WAAWL,MAAQ,QAC3BG,EAAQE,WAAWN,SAAW,WAE9BH,EAAMU,OAAS,MAEfV,EAAQA,GAGJhB,EAAS,SAACC,GACd,IAKI+B,EAAmB/B,EAEnBgC,EAAa,GACjBD,EAAiBE,WAAWhC,KAAI,SAACiC,GAUnC,IAAkBC,EATdH,EAAWpB,KAAK,CACdwB,MAAOF,EAAEG,WACTC,OAOYH,EAPID,EAAEK,UAQfJ,EAAIK,QAAQ,2BAA2B,SAAUC,EAAOC,GAC7D,OAAe,KAAVD,EAAoB,GACR,IAAVC,EAAcD,EAAME,cAAgBF,EAAMG,uBAPnDpF,EAAkBwE,GAClBtE,EAAcqE,EAAiBc,WAUjC,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,UAAW,OAAjB,SACE,cAAC,IAAD,UACE,qBAAKA,UAAW,cAAhB,SACE,cAAC,IAAD,CAASC,SAtKQ,SAACC,GAC1B,IAAIC,EAAYD,EAAME,OAAO/B,MAC3B/C,EAAkB6E,IAoKZ,SACGtF,EAAWsC,KAAI,SAACiC,GAAD,OACd,wBAAoBf,MAAOe,EAAEiB,IAA7B,SACGjB,EAAEf,OADQe,EAAEiB,gBAQzB,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAG,KAAT,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMA,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAxB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,qBACEC,GAAG,WACHC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,iBAKxC,cAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAxB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,qBACEC,GAAG,cACHC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,iBAKxC,cAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAxB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,qBACEC,GAAG,cACHC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,4BAUlD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACKrE,QAAQC,IAAIpC,GACf,cAAC,IAAD,CAAKyG,IAAKzG,EAAQ0G,OA7Db,EAAE,IAAU,YA6DmBC,KAAM,EAA1C,SACE,cAAC,IAAD,CACEC,IAAI,qDACJC,YAAY,qGAOxB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE3B,MAAM,GACN4B,QAAS,CACPC,YAAa,CACXC,gBAAiB,UACjBC,MAAO,QAETC,WAAW,GAEbC,QAAS9G,EACT4B,KAAM1B,iB,k7CCrUT6G,EAAe,SAACC,EAAUC,GAEnC,OADFnF,QAAQC,IAAIkF,GACH,CAACC,KAAM,QAASF,WAAUC,cAGxBE,EAAW,SAACC,GAErB,OAAO,SAACC,GACFC,IAAK9F,IAAL,UAAYC,iCAAZ,0CAA4E2F,EAAMG,gBAAlF,qBAA8GH,EAAMI,WAEpH9F,MAAK,SAAC+F,GAEJ,IAAI7F,EAAO6F,EAAI7F,KACXA,EAAK8F,WACLC,eAAeC,QAAQ,gBAAgB,GACvCD,eAAeC,QAAQ,SAAUH,EAAI7F,KAAKA,KAAKiG,QAC/CC,IAAKC,KAAK,WAAV,oBAA2C,WAAWrG,MAAK,kBAAMsG,OAAOC,SAAW,QAEnFH,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,c,kBCpB/C5G,EAAgB,WAAkB,IAAjB6G,IAAgB,yDACxCA,EACFL,IAAKC,KAAK,CACRlD,MAAO,4BACPpE,KAAM,uBACN2H,mBAAmB,EACnBC,aAJQ,WAKNP,IAAKQ,eAEPC,aAPQ,WAQNT,IAAKU,eAEPC,mBAAmB,EACnBC,gBAAgB,EAChBC,eAAe,IAGjBb,IAAKc,SCZIC,EAAkB,SAAC7B,EAAUC,GACxC,MAAO,CAAEC,KAAM,eAAgBF,WAAUC,cAS9B6B,EAAkB,SAAC5B,GAC9B,OAAO,SAACG,GACN/F,GAAc,GACdgG,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAYC,kBAFpD,kBAIGtH,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,UACPL,EAAS,CAAEH,OAAM+B,QAASrH,EAAKA,OAE/BkG,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsH,eAAiB,cAYzCC,EAAgB,SAACC,GAC7B,OAAO,SAAC/B,GACN/F,GAAc,GACd+F,EAAS,CAAEH,KAAM,wBACjBI,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAYC,kBAFpD,mCAEgGI,IAE7F1H,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPL,EAASwB,EAAgB,aAAcO,IACvC/B,EACEwB,EAAgB,kBAAmBjH,EAAKA,KAAKyH,kBAE/ChC,EAASwB,EAAgB,OAAQjH,EAAKA,KAAK0H,OAC3CjC,EAASwB,EAAgB,aAAcjH,EAAKA,KAAK2H,aACjDlC,EAAS,CAAEH,KAAM,iBAAkB+B,SAAS,KAE5CnB,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsH,eAAiB,cAUxCM,EAAe,SAAC5H,GAC3B,OAAO,SAACyF,GACN/F,GAAc,GACd,IAAIuG,EAASF,eAAe8B,QAAQ,UAChCC,EAAK,kBAAc7B,EAAd,4BAAwCjG,EAAK+H,gBAA7C,iBAAqE/H,EAAKgI,KAA1E,uBAA6FhI,EAAKiI,YAC3GvC,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAYC,kBAFpD,uBAEoFU,IAEjFhI,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPI,IAAKC,KAAK,WAAV,oCAA2D,WAC3DV,EAAS,CAAEH,KAAM,iBAAkB+B,SAAS,IAC5C5B,EAAS,CAAEH,KAAM,wBACfG,EAASyB,EAAgB,mBAE3BhB,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cASzC6B,EAAiB,SAACnI,GAC7B,IAAIiG,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACN/F,GAAc,GACdgG,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAYC,kBAFpD,gCAE6FnB,GACzFjG,GAEDF,MAAK,SAAC+F,GACDA,EAAI7F,KAAK8F,WACXL,EAAS,CAAEH,KAAM,iBAAkB+B,SAAS,IAC5C5B,EAASyB,EAAgB,mBAEzBhB,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAMzC8B,EAAiB,SAACZ,EAAYE,GACzC,IAAIzB,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACNS,IAAKC,KAAK,CACRlD,MAAO,qBACPoF,KAAK,2BAAD,OAA6BX,GACjCY,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,uBAClB5I,MAAK,SAACC,GACHA,EAAO4I,aACTjD,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAYC,kBAFpD,kCAE+FnB,EAF/F,uBAEoHuB,IAEjH1H,MAAK,SAAC+F,GACL,IAAI9F,EAAS8F,EAAI7F,KACbD,EAAO+F,WACTI,IAAKC,KAAL,wBAEUuB,EAFV,gCAKAjC,EAAS,CAAEH,KAAM,wBACjBG,EAASyB,EAAgB,mBAEzBhB,IAAKC,KAAK,QAAV,UAAsBpG,EAAOuG,eAAiB,iB,SC3I/CsC,EAAmB,SAACtD,GAC/B,OAAO,SAACG,GACNC,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY0B,kBAFpD,kBAIG/I,MAAK,SAAC+F,GACL,IAAI7F,EAAO6F,EAAI7F,KACXA,EAAK8F,UACPL,EAAS,CAAEH,OAAM+B,QAASrH,EAAKA,OAE/BkG,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAMzCwC,EAAmB,SAACxD,GAC/B,OAAO,SAACG,GACN/F,GAAc,GACdgG,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAYC,kBAFpD,sBAIGtH,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIK,EAAS8F,EAAI7F,KACbD,EAAO+F,UACTL,EAAS,CAACH,OAAK+B,QAAQtH,EAAOC,OAE7BkG,IAAKC,KAAK,QAAV,UAAsBpG,EAAOuG,eAAiB,cChC5CyC,EAAa,SAAC3D,EAAUC,GACnC,MAAO,CAAEC,KAAM,UAAWF,WAAUC,cAIzB2D,EAAgB,SAAC1D,EAAM2D,GAClC,OAAO,SAACxD,GACN/F,GAAc,GACdgG,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY0B,kBAFpD,qCAEkGI,IAE/FnJ,MAAK,SAAC+F,GACHnG,GAAc,GAChB,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,UACPL,EAAS,CAAEH,OAAM+B,QAASrH,EAAKA,OAE/BkG,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsH,eAAiB,cAMzC4B,EAAmB,SAACC,GAE/B,OAAM,SAAC1D,GACL/F,GAAc,GACd+F,EAAS,CAAEH,KAAM,mBACjBI,IAAK9F,IAAL,UACKC,kCADL,OACsCsH,IAAY0B,kBADlD,qCACgGM,IAC9FrJ,MAAK,SAAA+F,GACLnG,GAAc,GACd,IAAI0J,EAAUvD,EAAI7F,KACdoJ,EAAQtD,WACVL,EAASsD,EAAW,cAAeI,IACnC1D,EAASsD,EAAW,aAAcK,EAAQpJ,KAAKqJ,aAC/C5D,EAASsD,EAAW,OAAQK,EAAQpJ,KAAKsJ,OACzC7D,EAASsD,EAAW,OAAQK,EAAQpJ,KAAK0H,OACvCjC,EAAS,CAAEH,KAAM,YAAa+B,SAAS,KAEvCnB,IAAKC,KAAK,QAAV,UAAsBiD,EAAQ9B,eAAiB,cAM5CiC,EAAgB,SAACvJ,GAC5B,OAAM,SAACyF,GACL/F,GAAc,GACd,IAAIoI,EAAK,sBAAkB9H,EAAKiJ,WAAvB,iBAA0CjJ,EAAKwJ,KAA/C,iBAA4DxJ,EAAKgI,MAC1EtC,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY0B,kBAFpD,wBAEqFf,IAElFhI,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPI,IAAKC,KAAK,WAAV,oCAA2D,WAC3DV,EAAS,CAAEH,KAAM,YAAa+B,SAAS,IACvC5B,EAAS,CAAEH,KAAM,mBACjB0D,EAAc,iBAAkBhJ,EAAKiJ,aAGrC/C,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAOzCmD,EAAkB,SAACzJ,GAE9B,OAAO,SAACyF,GACN/F,GAAc,GACdgG,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY0B,kBAFpD,kBAGI7I,GAEDF,MAAK,SAAC+F,GACFA,EAAI7F,KAAK8F,WACRL,EAAS,CAAEH,KAAM,YAAa+B,SAAS,IACvC5B,EAASuD,EAAc,iBAAkBhJ,EAAKiJ,cAEhD/C,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAOzCoD,EAAkB,SAACP,EAAaQ,EAASC,GAEpD,OADA1J,QAAQC,IAAIyJ,GACN,SAACnE,GACHS,IAAKC,KAAK,CACRlD,MAAO,qBACPoF,KAAK,4BAAD,OAA8BsB,GAClCrB,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,uBAClB5I,MAAK,SAACC,GACHA,EAAO4I,aACTjD,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY0B,kBAFpD,wCAEqGM,IAElGrJ,MAAK,SAAC+F,GACL,IAAI9F,EAAS8F,EAAI7F,KACbD,EAAO+F,WACTI,IAAKC,KAAL,wBAA2BwD,EAA3B,gCACClE,EAAS,CAAEH,KAAM,mBACjBG,EAASuD,EAAc,iBAAkBY,KAE1C1D,IAAKC,KAAK,QAAV,UAAsBpG,EAAOuG,eAAiB,iBChHjDuD,EAAyB,SAACzE,EAAUC,GAC/C,MAAO,CAAEC,KAAM,gBAAiBF,WAAUC,cAS/ByE,EAA4B,SAAC1E,EAAUC,GAClD,MAAO,CAAEC,KAAM,mBAAoBF,WAAUC,cASlC0E,EAAuB,SAAC3E,EAAUC,GAC7C,MAAO,CAAEC,KAAM,cAAeF,WAAUC,cAI7B2E,EAAoB,SAAC1E,GAChC,OAAO,SAACG,GACN/F,GAAc,GACdgG,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY8C,SAFpD,wBAIGnK,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,UACPL,EAAS,CAAEH,OAAM+B,QAASrH,EAAKA,OAE/BkG,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsH,eAAiB,cAKzC4C,EAA6B,SAAC5E,GACzC,OAAO,SAACG,GACN/F,GAAc,GACdgG,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY8C,SAFpD,2BAIGnK,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,UACPL,EAAS,CAAEH,OAAM+B,QAASrH,EAAKA,OAE/BkG,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsH,eAAiB,cAMzC6C,EAAwB,SAAC7E,GACpC,OAAO,SAACG,GACN/F,GAAc,GACdgG,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY8C,SAFpD,sBAIGnK,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,UACPL,EAAS,CAAEH,OAAM+B,QAASrH,EAAKA,OAE/BkG,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsH,eAAiB,cAMzC8C,EAA2B,SAACpK,GACvC,IAAIiG,EAASF,eAAe8B,QAAQ,UACpC,OAAM,SAACpC,GACL/F,GAAc,GACd,IAAIoI,EAAK,kBAAc7B,EAAd,iBAA6BjG,EAAKgI,KAAlC,kBAAgDhI,EAAKqK,OAC9D3E,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY8C,SAFpD,6BAEiFnC,IAE9EhI,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPI,IAAKC,KAAK,WAAV,oCAA2D,WAC3DV,EAAS,CAAEH,KAAM,kBAAmB+B,SAAS,IAC7C5B,EAAS,CAAEH,KAAM,yBACjBG,EAASuE,EAAkB,wBAE3B9D,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAMzCgE,EAA8B,SAACtK,GAC1C,IAAIiG,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACN/F,GAAc,GACd,IAAIoI,EAAK,kBAAc7B,EAAd,iBAA6BjG,EAAKgI,KAAlC,kBAAgDhI,EAAKqK,OAC9D3E,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY8C,SAFpD,gCAEoFnC,IAEjFhI,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPI,IAAKC,KAAK,WAAV,oCAA2D,WAC3DV,EAAS,CAAEH,KAAM,qBAAsB+B,SAAS,IAChD5B,EAAS,CAAEH,KAAM,4BACjBG,EAASyE,EAA2B,2BAEpChE,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAMzCiE,EAAyB,SAACvK,GACrC,IAAIiG,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACN/F,GAAc,GACd,IAAIoI,EAAK,kBAAc7B,EAAd,iBAA6BjG,EAAKgI,KAAlC,kBAAgDhI,EAAKqK,OAC9D3E,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY8C,SAFpD,2BAE+EnC,IAE5EhI,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPI,IAAKC,KAAK,WAAV,oCAA2D,WAC3DV,EAAS,CAAEH,KAAM,gBAAiB+B,SAAS,IAC3C5B,EAAS,CAAEH,KAAM,uBACjBG,EAAS0E,EAAsB,sBAE/BjE,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAMzCkE,EAA8B,SAACpG,GAC1C,OAAO,SAACqB,GACN/F,GAAc,GACd+F,EAAS,CAAEH,KAAM,mBACjBI,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY8C,SAFpD,iCAEqF7F,IAElFtE,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPL,EAASoE,EAAuB,KAAMzF,IACtCqB,EAASoE,EAAuB,OAAQ7J,EAAKA,KAAK0H,OAClDjC,EAASoE,EAAuB,QAAS7J,EAAKA,KAAKyK,QACnDhF,EAAS,CAAEH,KAAM,kBAAmB+B,SAAS,KAE7CnB,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsH,eAAiB,cAMzCoD,EAAiC,SAACtG,GAC7C,OAAO,SAACqB,GACN/F,GAAc,GACd+F,EAAS,CAAEH,KAAM,4BACjBI,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY8C,SAFpD,oCAEwF7F,IAErFtE,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPL,EAASqE,EAA0B,KAAM1F,IACzCqB,EAASqE,EAA0B,OAAQ9J,EAAKA,KAAK0H,OACrDjC,EAASqE,EAA0B,QAAS9J,EAAKA,KAAKyK,QACtDhF,EAAS,CAAEH,KAAM,qBAAsB+B,SAAS,KAEhDnB,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsH,eAAiB,cAMzCqD,EAA4B,SAACvG,GACxC,OAAO,SAACqB,GACN/F,GAAc,GACd+F,EAAS,CAAEH,KAAM,uBACjBI,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY8C,SAFpD,+BAEmF7F,IAEhFtE,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPL,EAASsE,EAAqB,KAAM3F,IACpCqB,EAASsE,EAAqB,OAAQ/J,EAAKA,KAAK0H,OAChDjC,EAASsE,EAAqB,QAAS/J,EAAKA,KAAKyK,QACjDhF,EAAS,CAAEH,KAAM,gBAAiB+B,SAAS,KAE3CnB,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsH,eAAiB,cAMzCsD,EAA6B,SAAC5K,GACzC,IAAIiG,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACN/F,GAAc,GACdgG,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY8C,SAFpD,sCAE0FhE,GACtFjG,GAEDF,MAAK,SAAC+F,GACDA,EAAI7F,KAAK8F,WACXL,EAAS,CAAEH,KAAM,kBAAmB+B,SAAS,IAC9C5B,EAASuE,EAAkB,wBAE1B9D,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAMzCuE,EAAgC,SAAC7K,GAC5C,IAAIiG,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACN/F,GAAc,GACdgG,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY8C,SAFpD,yCAE6FhE,GACzFjG,GAEDF,MAAK,SAAC+F,GACDA,EAAI7F,KAAK8F,WACXL,EAAS,CAAEH,KAAM,qBAAsB+B,SAAS,IAChD5B,EAASyE,EAA2B,2BAEpChE,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAOzCwE,EAA2B,SAAC9K,GACvC,IAAIiG,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACN/F,GAAc,GACdgG,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY8C,SAFpD,oCAEwFhE,GACpFjG,GAEDF,MAAK,SAAC+F,GACDA,EAAI7F,KAAK8F,WACXL,EAAS,CAAEH,KAAM,gBAAiB+B,SAAS,IAC3C5B,EAAS0E,EAAsB,sBAE/BjE,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAOzCyE,EAAwB,SAAC3G,EAAIsD,GACxC,IAAIzB,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACNS,IAAKC,KAAK,CACRlD,MAAO,qBACPoF,KAAK,wBAAD,OAA0BX,GAC9BY,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,uBAClB5I,MAAK,SAACC,GACHA,EAAO4I,aACTjD,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY8C,SAFpD,wCAE4FhE,EAF5F,eAEyG7B,IAEtGtE,MAAK,SAAC+F,GACL,IAAI9F,EAAS8F,EAAI7F,KACbD,EAAO+F,WACTI,IAAKC,KAAL,wBAA4BuB,EAA5B,gCACAjC,EAAS,CAAEH,KAAM,yBAChBG,EAASuE,EAAkB,wBAE5B9D,IAAKC,KAAK,QAAV,UAAsBpG,EAAOuG,eAAiB,iBAQ/C0E,EAA2B,SAAC5G,EAAIsD,GAC3C,IAAIzB,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACNS,IAAKC,KAAK,CACRlD,MAAO,qBACPoF,KAAK,wBAAD,OAA0BX,GAC9BY,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,uBAClB5I,MAAK,SAACC,GACHA,EAAO4I,aACTjD,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY8C,SAFpD,2CAE+FhE,EAF/F,eAE4G7B,IAEzGtE,MAAK,SAAC+F,GACL,IAAI9F,EAAS8F,EAAI7F,KACbD,EAAO+F,WACTI,IAAKC,KAAL,wBAA4BuB,EAA5B,gCACAjC,EAAS,CAAEH,KAAM,4BACjBG,EAASyE,EAA2B,2BAEpChE,IAAKC,KAAK,QAAV,UAAsBpG,EAAOuG,eAAiB,iBAS/C2E,EAAsB,SAAC7G,EAAIsD,GACtC,IAAIzB,EAASF,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACNS,IAAKC,KAAK,CACRlD,MAAO,qBACPoF,KAAK,wBAAD,OAA0BX,GAC9BY,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,uBAClB5I,MAAK,SAACC,GACHA,EAAO4I,aACTjD,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY8C,SAFpD,sCAE0FhE,EAF1F,eAEuG7B,IAEpGtE,MAAK,SAAC+F,GACL,IAAI9F,EAAS8F,EAAI7F,KACbD,EAAO+F,WACTI,IAAKC,KAAL,wBAA4BuB,EAA5B,gCACAjC,EAAS,CAAEH,KAAM,uBACjBG,EAAS0E,EAAsB,sBAE/BjE,IAAKC,KAAK,QAAV,UAAsBpG,EAAOuG,eAAiB,iBC1X/C4E,EAAuB,SAAC9F,EAAUC,GAC7C,MAAO,CAAEC,KAAM,cAAeF,WAAUC,cAG7B8F,EAAuB,SAAC7F,GACnC,OAAO,SAACG,GACN/F,GAAc,GACdgG,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY0B,kBAFpD,iBAIG/I,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,UACPL,EAAS,CAAEH,OAAM+B,QAASrH,EAAKA,OAE/BkG,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAMzC8E,EAAoB,SAACpL,GAChC,OAAO,SAACyF,GACN/F,GAAc,GACDqG,eAAe8B,QAAQ,UAApC,IACIC,EAAK,gBAAY9H,EAAKwJ,KAAjB,iBAA8BxJ,EAAKgI,KAAnC,uBAAsDhI,EAAKiI,YACpEvC,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY0B,kBAFpD,sBAEmFf,IAEhFhI,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPI,IAAKC,KAAK,WAAV,oCAA2D,WAC3DV,EAAS,CAAEH,KAAM,gBAAiB+B,SAAS,IAC3C5B,EAAS,CAAEH,KAAM,uBAClBG,EAAS0F,EAAqB,sBAE7BjF,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAOzC+E,EAAqB,SAACC,GACjC,OAAO,SAAC7F,GACN/F,GAAc,GACd+F,EAAS,CAAEH,KAAM,uBACjBI,IACG9F,IADH,UAEOC,kCAFP,OAEwCsH,IAAY0B,kBAFpD,iCAE8FyC,IAE3FxL,MAAK,SAAC+F,GACLnG,GAAc,GACd,IAAIM,EAAO6F,EAAI7F,KACXA,EAAK8F,WACPL,EAASyF,EAAqB,YAAaI,IAC3C7F,EACEyF,EAAqB,OAAQlL,EAAKA,KAAKsJ,OAEzC7D,EAASyF,EAAqB,OAAQlL,EAAKA,KAAK0H,OAChDjC,EAAS,CAAEH,KAAM,gBAAiB+B,SAAS,KAE3CnB,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAWzCiF,EAAsB,SAACvL,GAClC,OAAO,SAACyF,GACN/F,GAAc,GACdgG,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY0B,kBAFpD,gBAGI7I,GAEDF,MAAK,SAAC+F,GACDA,EAAI7F,KAAK8F,WACXL,EAAS,CAAEH,KAAM,gBAAiB+B,SAAS,IAC3C5B,EAAS,CAAEH,KAAM,uBACjBG,EAAS0F,EAAqB,sBAE9BjF,IAAKC,KAAK,QAAV,UAAsBnG,EAAKsG,eAAiB,cAOzCkF,EAAsB,SAACpH,EAAIsD,GACzB3B,eAAe8B,QAAQ,UACpC,OAAO,SAACpC,GACNS,IAAKC,KAAK,CACRlD,MAAO,qBACPoF,KAAK,0BAAD,OAA4BX,GAChCY,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,uBAClB5I,MAAK,SAACC,GACHA,EAAO4I,aACTjD,IACGwC,KADH,UAEOrI,kCAFP,OAEwCsH,IAAY0B,kBAFpD,oCAEiGzE,IAE9FtE,MAAK,SAAC+F,GACL,IAAI9F,EAAS8F,EAAI7F,KACbD,EAAO+F,WACTI,IAAKC,KAAL,wBAA4BuB,EAA5B,gCACCjC,EAAS,CAAEH,KAAM,gBAAiB+B,SAAS,IAC3C5B,EAAS,CAAEH,KAAM,uBACjBG,EAAS0F,EAAqB,sBAE/BjF,IAAKC,KAAK,QAAV,UAAsBpG,EAAOuG,eAAiB","file":"static/js/14.ec617082.chunk.js","sourcesContent":["import {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CRow,\n  CSelect,\n  CSwitch,\n} from \"@coreui/react\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nimport MaterialTable from \"material-table\";\n\nimport CIcon from \"@coreui/icons-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { loadingStatus } from \"src/common/redux/action\";\nimport React, { useEffect, useState, useRef } from 'react'\nimport './Dashboard.css'\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nimport marker from \"leaflet/dist/images/marker-icon.png\";\nimport marker2x from \"leaflet/dist/images/marker-icon-2x.png\";\nimport markerShadow from \"leaflet/dist/images/marker-shadow.png\";\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: marker2x,\n  iconUrl: marker,\n  shadowUrl: markerShadow,\n});\n\n\n\n\n\n\nam4core.useTheme(am4themes_animated);\n\nconst Dashboard = () => {\n   const mapRef = useRef();\n\n  const [SetDashboardListReducer, SetValueDashboardListReducer] = useState([]);\n  const [setDataMap, SetDataMapReducer] = useState([]);\n  const [columnOfTables, setcolumnOfTables] = useState([]);\n  const [dataTables, setdataTables] = useState([]);\n  const [listOfYear, setListOfyear] = useState([]);\n\n  const backYear = ()=> {\n    let yearNow = new Date().getFullYear();\n    var decrementYear = yearNow - 5;\n    let tmpArr = [];\n    for (yearNow; yearNow > decrementYear; yearNow--) {\n      tmpArr.push({\n          \"key\" : yearNow,\n          \"value\" : yearNow,\n      })\n    }\n     setListOfyear(tmpArr);\n  }\n\n  const Get = (pathApi, year) => {\n\n    const promise = new Promise((resolve, reject) =>{\n      loadingStatus(true);\n        axios.get(`${process.env.REACT_APP_ROOT_API}Mnvs/GetMonevSpasial?Tahun=${year}`)\n        .then((result) =>{\n          loadingStatus(false);\n          resolve(result.data);\n        }, (error) =>{\n          console.log(error)\n          reject(error)\n        })\n    })\n\n    return promise;\n}\n\n  const handleOnchangeYear = (event) => {\n    let yearValue = event.target.value;\n      generateDashboard(yearValue);\n  }\n\n  const dataDetailDatPupup = (feature, layer) => {\n    //var popupcontent = [];\n\n        let html = \"\";\n        html +=\n            '<table class=\"table table-striped- table-bordered table-hover table-checkable\">';\n        for (var prop in feature.properties) {\n            html += \"<tr>\";\n            html += \"<td> <strong>\" + prop + \"</strong> </td>\";\n            html += \"<td> : </td>\";\n            html += \"<td> \" + feature.properties[prop] + \" </td>\";\n            html += \"</tr>\";\n        }\n        html += \"</table>\";\n        layer.bindPopup(html);\n    }\n\n  const generateDashboard = (year) => {\n\n       let currentYear = new Date().getFullYear();\n\n         Get('',year == undefined ? currentYear : year).then(\n          result=> {\n            chartInput(result.data.graphInput);\n            chartCiq(result.data.graphCiq);\n            chartPap(result.data.graphPap);\n            SetValueDashboardListReducer(result.data);\n            tables(result.data.dataTable);\n            SetDataMapReducer(result.data.map.gJson);\n             const { current = {} } = mapRef;\n             const { leafletElement: map } = current;\n\n             const parksGeoJson = new L.GeoJSON(result.data.map.gJson, {\n               onEachFeature: dataDetailDatPupup\n             });\n\n             parksGeoJson.addTo(map);\n          }\n        )\n  }\n\n\n\n\n  useEffect(() => {\n\n      backYear();\n     generateDashboard();\n\n\n  },[]);\n  const chartInput = (dataInput) => {\n    let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\n    chart.paddingRight = 20;\n    chart.data = [\n      {\n        category: \"Belum Input\",\n        value: dataInput.jmlBlmInput,\n      },\n      {\n        category: \"Sudah Input\",\n        value: dataInput.jmlInput,\n      },\n    ];\n\n    let series1 = chart.series.push(new am4charts.PieSeries());\n    series1.dataFields.value = \"value\";\n    series1.dataFields.category = \"category\";\n\n    chart.radius = \"60%\";\n\n    chart = chart;\n  };\n\n  const chartCiq = (dataCiq) => {\n    let chart = am4core.create(\"chartdivCiq\", am4charts.PieChart);\n    chart.paddingRight = 20;\n\n    chart.data = [\n      {\n        category: \"Dibawah 25\",\n        value: dataCiq.under25,\n      },\n      {\n        category: \"Antara 25 s/d 75\",\n        value: dataCiq.between25_75,\n      },\n      {\n        category: \"Diatas 75\",\n        value: dataCiq.up75,\n      },\n    ];\n\n    let series1 = chart.series.push(new am4charts.PieSeries());\n    series1.dataFields.value = \"value\";\n    series1.dataFields.category = \"category\";\n\n    chart.radius = \"60%\";\n\n    chart = chart;\n  };\n\n  const chartPap = (dataPap) => {\n    let chart = am4core.create(\"chartdivPap\", am4charts.PieChart);\n    chart.paddingRight = 20;\n\n    chart.data = [\n      {\n        category: \"Dibawah 25\",\n        value: dataPap.under25,\n      },\n      {\n        category: \"Antara 25 s/d 75\",\n        value: dataPap.between25_75,\n      },\n      {\n        category: \"Diatas 75\",\n        value: dataPap.up75,\n      },\n    ];\n\n    let series1 = chart.series.push(new am4charts.PieSeries());\n    series1.dataFields.value = \"value\";\n    series1.dataFields.category = \"category\";\n\n    chart.radius = \"60%\";\n\n    chart = chart;\n  };\n\n  const tables = (dataTable) => {\n    const columns = [\n      { title: \"Kode\", field: \"kode\" },\n      { title: \"Nama Kabupaten\", field: \"nama\" },\n    ];\n\n    let dataTablesReduce = dataTable;\n\n    let columnsArr = [];\n    dataTablesReduce.listColumn.map((v) => {\n      columnsArr.push({\n        title: v.fieldAlias,\n        field: camelize(v.fieldName),\n      });\n    });\n    setcolumnOfTables(columnsArr);\n    setdataTables(dataTablesReduce.listData);\n  };\n\n  function camelize(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n      if (+match === 0) return \"\"; // or if (/\\s+/.test(match)) for white spaces\n      return index === 0 ? match.toLowerCase() : match.toUpperCase();\n    });\n  }\n  const position = [-6.200000, 106.816666];\n  return (\n    <CContainer>\n      <CRow className={\"mb-4\"}>\n        <CCol>\n          <div className={\"float-right\"}>\n            <CSelect onChange={handleOnchangeYear}>\n              {listOfYear.map((v) => (\n                <option key={v.key} value={v.key}>\n                  {v.value}\n                </option>\n              ))}\n            </CSelect>\n          </div>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol xs=\"12\" sm=\"6\" md=\"4\">\n                  <CCard>\n                    <CCardBody>\n                      <div\n                        id=\"chartdiv\"\n                        style={{ width: \"100%\", height: \"200px\" }}\n                      ></div>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n                <CCol xs=\"12\" sm=\"6\" md=\"4\">\n                  <CCard>\n                    <CCardBody>\n                      <div\n                        id=\"chartdivCiq\"\n                        style={{ width: \"100%\", height: \"200px\" }}\n                      ></div>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n                <CCol xs=\"12\" sm=\"6\" md=\"4\">\n                  <CCard>\n                    <CCardBody>\n                      <div\n                        id=\"chartdivPap\"\n                        style={{ width: \"100%\", height: \"200px\" }}\n                      ></div>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardBody>\n                {console.log(mapRef)}\n              <Map ref={mapRef} center={position} zoom={4}>\n                <TileLayer\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n              </Map>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <MaterialTable\n                title=\"\"\n                options={{\n                  headerStyle: {\n                    backgroundColor: \"#01579b\",\n                    color: \"#FFF\",\n                  },\n                  filtering: true,\n                }}\n                columns={columnOfTables}\n                data={dataTables}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </CContainer>\n  );\n}\n\nexport default Dashboard\n","\nimport {http} from '../../helper/http';\nimport Swal from 'sweetalert2';\nimport { useHistory } from \"react-router-dom\";\nexport const setFormLogin = (formType, formValue) => {\n  console.log(formValue);\n    return {type: 'login', formType, formValue}\n}\n\nexport const apiLogin = (iData) => {\n\n    return (dispatch) => {\n          http.get(`${process.env.REACT_APP_ROOT_API}UserApps/Login?UsernameOrEmail=${iData.UsernameOrEmail}&Password=${iData.Password}`\n\n        ).then((res) => {\n\n            let data = res.data;\n            if (data.isSuccess) {\n                sessionStorage.setItem('isSuccessLgn', true);\n                sessionStorage.setItem('idUser', res.data.data.idUser);\n                Swal.fire('Berhasil', `Selamat datang!!!`, 'success').then(() => window.location = '/')\n            } else {\n                Swal.fire('Gagal', `${data.returnMessage}`, 'error');\n            }\n        })\n    }\n}\n","\nimport Swal from 'sweetalert2'\nexport const loadingStatus = (bool = true) => {\n  if (bool) {\n    Swal.fire({\n      title: \"proses sedangan dilakukan\",\n      html: \"silahkan menunggu...\",\n      showConfirmButton: false,\n      onBeforeOpen() {\n        Swal.showLoading();\n      },\n      onAfterClose() {\n        Swal.hideLoading();\n      },\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      allowEnterKey: false,\n    });\n  } else {\n    Swal.close();\n  }\n};\n","import { http } from 'src/common/'\nimport serviceName from 'src/common/helper/serviceName';\nimport Swal from 'sweetalert2';\nimport { loadingStatus } from './commonAction';\n\n\n\nexport const setFormVariabel = (formType, formValue) => {\n  return { type: \"ADD_VARIABEL\", formType, formValue };\n};\n\n/**\n * GetVariabel\n * @param {*} data\n * @returns : LIST Variabel\n */\n\nexport const GetDataVariabel = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/GetVariabels`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n}\n\n/**\n *\n * @param {idVar} data\n * @returns\n */\n\nexport const setVariabelId = (idVariabel) =>{\n return (dispatch) => {\n   loadingStatus(true);\n   dispatch({ type: \"RESET_FORM_VARIABEL\" });\n   http\n     .get(\n       `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/GetVariabel?IdVariabel=${idVariabel}`\n     )\n     .then((res) => {\n       loadingStatus(false);\n       let data = res.data;\n       if (data.isSuccess) {\n         dispatch(setFormVariabel(\"IdVariabel\", idVariabel));\n         dispatch(\n           setFormVariabel(\"IdJenisVariabel\", data.data.idJenisVariabel)\n         );\n         dispatch(setFormVariabel(\"Nama\", data.data.nama));\n         dispatch(setFormVariabel(\"Presentase\", data.data.presentase));\n         dispatch({ type: \"MODAL_VARIABEL\", payload: true });\n       } else {\n         Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n       }\n     });\n };\n}\n\n/**\n * add new variabel\n */\n\nexport const PostVariabel = (data) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    let idUser = sessionStorage.getItem(\"idUser\");\n    let param = `?IdUser=${idUser}&IdJenisVariabel=${data.IdJenisVariabel}&Nama=${data.Nama}&Presentase=${data.Presentase}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/AddVariabel${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_VARIABEL\", payload: false });\n          dispatch({ type: \"RESET_FORM_VARIABEL\" });\n            dispatch(GetDataVariabel(\"GET_VARIABELS\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/***\n * Proses udpate\n */\nexport const UpdateVariabel = (data) => {\n  let idUser = sessionStorage.getItem('idUser');\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/EditVariabel?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_VARIABEL\", payload: false });\n          dispatch(GetDataVariabel(\"GET_VARIABELS\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n}\n\nexport const DeleteVariabel = (idVariabel, nama) => {\n  let idUser = sessionStorage.getItem('idUser');\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus variabel ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/DeleteVariabel?IdUser=${idUser}&IdVariabel=${idVariabel}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(\n                `Sukses`,\n                `Data ${nama} berhasil dihapus`,\n                `success`\n              );\n              dispatch({ type: \"RESET_FORM_VARIABEL\" });\n              dispatch(GetDataVariabel(\"GET_VARIABELS\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n\n","\nimport { http } from \"src/common/helper\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n\n\nexport const setDataComboProv = (type) => {\n  return (dispatch) => {\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetProvinsis`\n      )\n      .then((res) => {\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const SetJenisVariabel = (type) => {\n  return (dispatch) => {\n    loadingStatus(false)\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterVariabel}/GetJenisVariabel`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let result = res.data;\n        if (result.isSuccess) {\n          dispatch({type,payload:result.data})\n        }else{\n           Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n","import { http } from \"src/common/helper\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n\nexport const setFormKab = (formType, formValue) => {\n  return { type: \"ADD_KAB\", formType, formValue };\n};\n\n\nexport const GetKabupatens = (type, IdProvinsi) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetKabupatens?IdProvinsi=${IdProvinsi}`\n      )\n      .then((res) => {\n          loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const GetKabupatenById = (idKabupaten) => {\n\n  return(dispatch) =>{\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_KAB\" });\n    http.get(\n      `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetKabupaten?IdKabupaten=${idKabupaten}`\n    ).then(res =>{\n      loadingStatus(false);\n      let dataKab = res.data;\n      if (dataKab.isSuccess) {\n        dispatch(setFormKab(\"IdKabupaten\", idKabupaten));\n        dispatch(setFormKab(\"IdProvinsi\", dataKab.data.idProvinsi));\n        dispatch(setFormKab(\"Kode\", dataKab.data.kode));\n        dispatch(setFormKab(\"Nama\", dataKab.data.nama));\n          dispatch({ type: \"MODAL_KAB\", payload: true });\n      }else{\n          Swal.fire(\"Gagal\", `${dataKab.ReturnMessage}`, \"error\");\n      }\n    });\n  }\n}\n\nexport const PostKabupaten = (data) => {\n  return(dispatch) => {\n    loadingStatus(true);\n    let param = `?IdProvinsi=${data.IdProvinsi}&Kode=${data.Kode}&Nama=${data.Nama}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/AddKabupaten${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_KAB\", payload: false });\n          dispatch({ type: \"RESET_FORM_KAB\" });\n          GetKabupatens(\"GET_KABUPATENS\", data.IdProvinsi);\n\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n\n  }\n}\n\nexport const UpdateKabupaten = (data) => {\n\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/EditKabupaten`,\n        data\n      )\n      .then((res) => {\n        if(res.data.isSuccess){\n            dispatch({ type: \"MODAL_KAB\", payload: false });\n            dispatch(GetKabupatens(\"GET_KABUPATENS\", data.IdProvinsi));\n        }else{\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n\n      });\n  }\n}\n\nexport const DeleteKabupaten = (idKabupaten, namaKab, idProv) =>{\n  console.log(idProv)\n  return(dispatch) =>{\n      Swal.fire({\n        title: \"Apakah anda yakin?\",\n        text: `Akan menghapus Kabupaten ${namaKab}`,\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Ya, Akan Menghapus\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          http\n            .post(\n              `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/DeleteKabupaten?IdKabupaten=${idKabupaten}`\n            )\n            .then((res) => {\n              let result = res.data;\n              if (result.isSuccess) {\n                Swal.fire(`Sukses`,`Data ${namaKab} berhasil dihapus`,`success`);\n                 dispatch({ type: \"RESET_FORM_KAB\" });\n                 dispatch(GetKabupatens(\"GET_KABUPATENS\", idProv));\n              } else {\n                Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n              }\n            });\n\n        }\n      });\n  }\n}\n\n\n","\nimport { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n/**\n * set change input modal kecukupan\n * @param {*} type\n * @returns\n */\nexport const setFormKecukupanAction = (formType, formValue) => {\n  return { type: \"ADD_KECUKUPAN\", formType, formValue };\n};\n\n/**\n * set change input modal ketersediaan\n * @param {*} type\n * @returns\n */\n\nexport const setFormKetersediaanAction = (formType, formValue) => {\n  return { type: \"ADD_KETERSEDIAAN\", formType, formValue };\n};\n\n/**\n * set change input modal ketersediaan\n * @param {*} type\n * @returns\n */\n\nexport const setFormKondisiAction = (formType, formValue) => {\n  return { type: \"ADD_KONDISI\", formType, formValue };\n};\n\n\nexport const GetBobotKecukupan = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKecukupans`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\nexport const GetBobotKetersediaanAction = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKetersediaans`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const GetBobotKondisiAction = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKondisis`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const PostBobotKecukupanAction = (data) =>{\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return(dispatch)=>{\n    loadingStatus(true);\n    let param = `?IdUser=${idUser}&Nama=${data.Nama}&Bobot=${data.Bobot}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/AddBobotKecukupan${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_KECUKUPAN\", payload: false });\n          dispatch({ type: \"RESET_FORM_KECUKUPAN\" });\n          dispatch(GetBobotKecukupan(\"GET_LIST_KECUKUPAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  }\n}\n\nexport const PostBobotKetersediaanAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(true);\n    let param = `?IdUser=${idUser}&Nama=${data.Nama}&Bobot=${data.Bobot}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/AddBobotKetersediaan${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_KETERSEDIAAN\", payload: false });\n          dispatch({ type: \"RESET_FORM_KETERSEDIAAN\" });\n          dispatch(GetBobotKetersediaanAction(\"GET_LIST_KETERSEDIAAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const PostBobotKondisiAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(true);\n    let param = `?IdUser=${idUser}&Nama=${data.Nama}&Bobot=${data.Bobot}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/AddBobotKondisi${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_KONDISI\", payload: false });\n          dispatch({ type: \"RESET_FORM_KONDISI\" });\n          dispatch(GetBobotKondisiAction(\"GET_LIST_KONDISI\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const SetBobokKecukupanByIdAction = (id) =>{\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_KAB\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKecukupan?Id=${id}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(setFormKecukupanAction(\"Id\", id));\n          dispatch(setFormKecukupanAction(\"Nama\", data.data.nama));\n          dispatch(setFormKecukupanAction(\"Bobot\", data.data.bobot));\n          dispatch({ type: \"MODAL_KECUKUPAN\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n}\n\nexport const SetBobotKetersediaanByIdAction = (id) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_KETERSEDIAAN\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKetersediaan?Id=${id}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(setFormKetersediaanAction(\"Id\", id));\n          dispatch(setFormKetersediaanAction(\"Nama\", data.data.nama));\n          dispatch(setFormKetersediaanAction(\"Bobot\", data.data.bobot));\n          dispatch({ type: \"MODAL_KETERSEDIAAN\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const SetBobotKondisiByIdAction = (id) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_KONDISI\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/GetBobotKondisi?Id=${id}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(setFormKondisiAction(\"Id\", id));\n          dispatch(setFormKondisiAction(\"Nama\", data.data.nama));\n          dispatch(setFormKondisiAction(\"Bobot\", data.data.bobot));\n          dispatch({ type: \"MODAL_KONDISI\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.ReturnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const UpdateBobotKecukupanAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/EditBobotKecukupan?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_KECUKUPAN\", payload: false });\n         dispatch(GetBobotKecukupan(\"GET_LIST_KECUKUPAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const UpdateBobotKetersediaanAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/EditBobotKetersediaan?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_KETERSEDIAAN\", payload: false });\n          dispatch(GetBobotKetersediaanAction(\"GET_LIST_KETERSEDIAAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\nexport const UpdateBobotKondisiAction = (data) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/EditBobotKondisi?IdUser=${idUser}`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_KONDISI\", payload: false });\n          dispatch(GetBobotKondisiAction(\"GET_LIST_KONDISI\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\nexport const DeleteKecukupanAction = (id, nama) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus Bobot ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/DeleteBobotKecukupan?IdUser=${idUser}&Id=${id}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${nama} berhasil dihapus`, `success`);\n              dispatch({ type: \"RESET_FORM_KECUKUPAN\" });\n               dispatch(GetBobotKecukupan(\"GET_LIST_KECUKUPAN\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n\nexport const DeleteKetersediaanAction = (id, nama) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus Bobot ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/DeleteBobotKetersediaan?IdUser=${idUser}&Id=${id}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${nama} berhasil dihapus`, `success`);\n              dispatch({ type: \"RESET_FORM_KETERSEDIAAN\" });\n              dispatch(GetBobotKetersediaanAction(\"GET_LIST_KETERSEDIAAN\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n\n\nexport const DeleteKondisiAction = (id, nama) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus Bobot ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcBobot}/DeleteBobotKondisi?IdUser=${idUser}&Id=${id}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${nama} berhasil dihapus`, `success`);\n              dispatch({ type: \"RESET_FORM_KONDISI\" });\n              dispatch(GetBobotKondisiAction(\"GET_LIST_KONDISI\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n","import { http } from \"src/common/\";\nimport serviceName from \"src/common/helper/serviceName\";\nimport Swal from \"sweetalert2\";\nimport { loadingStatus } from \"./commonAction\";\n\n\nexport const setFormJabatanAction = (formType, formValue) => {\n  return { type: \"ADD_JABATAN\", formType, formValue };\n};\n\nexport const GetDataJabatanAction = (type) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetJabatans`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch({ type, payload: data.data });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\nexport const PostJabatanAction = (data) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    let idUser = sessionStorage.getItem(\"idUser\");\n    let param = `?Kode=${data.Kode}&Nama=${data.Nama}&Presentase=${data.Presentase}`;\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/AddJabatan${param}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          Swal.fire(\"Berhasil\", `Anda telah berhasil menambah data`, \"success\");\n          dispatch({ type: \"MODAL_JABATAN\", payload: false });\n          dispatch({ type: \"RESET_FORM_JABATAN\" });\n         dispatch(GetDataJabatanAction(\"GET_LIST_JABATAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n\nexport const setJabatanIdAction = (idJabatan) => {\n  return (dispatch) => {\n    loadingStatus(true);\n    dispatch({ type: \"RESET_FORM_JABATAN\" });\n    http\n      .get(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/GetJabatan?IdJabatan=${idJabatan}`\n      )\n      .then((res) => {\n        loadingStatus(false);\n        let data = res.data;\n        if (data.isSuccess) {\n          dispatch(setFormJabatanAction(\"IdJabatan\", idJabatan));\n          dispatch(\n            setFormJabatanAction(\"Kode\", data.data.kode)\n          );\n          dispatch(setFormJabatanAction(\"Nama\", data.data.nama));\n          dispatch({ type: \"MODAL_JABATAN\", payload: true });\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n};\n\n/**\n *\n * @param {*} json (data)\n * @returns\n */\nexport const UpdateJabatanAction = (data) => {\n  return (dispatch) => {\n    loadingStatus(false);\n    http\n      .post(\n        `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/EditJabatan`,\n        data\n      )\n      .then((res) => {\n        if (res.data.isSuccess) {\n          dispatch({ type: \"MODAL_JABATAN\", payload: false });\n          dispatch({ type: \"RESET_FORM_JABATAN\" });\n          dispatch(GetDataJabatanAction(\"GET_LIST_JABATAN\"));\n        } else {\n          Swal.fire(\"Gagal\", `${data.returnMessage}`, \"error\");\n        }\n      });\n  };\n}\n\n\nexport const DeleteJabatanAction = (id, nama) => {\n  let idUser = sessionStorage.getItem(\"idUser\");\n  return (dispatch) => {\n    Swal.fire({\n      title: \"Apakah anda yakin?\",\n      text: `Akan menghapus Jabatan ${nama}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Ya, Akan Menghapus\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        http\n          .post(\n            `${process.env.REACT_APP_ROOT_API}${serviceName.svcMasterWillOrgs}/DeleteJabatan?IdJabatan=${id}`\n          )\n          .then((res) => {\n            let result = res.data;\n            if (result.isSuccess) {\n              Swal.fire(`Sukses`, `Data ${nama} berhasil dihapus`, `success`);\n               dispatch({ type: \"MODAL_JABATAN\", payload: false });\n               dispatch({ type: \"RESET_FORM_JABATAN\" });\n               dispatch(GetDataJabatanAction(\"GET_LIST_JABATAN\"));\n            } else {\n              Swal.fire(\"Gagal\", `${result.returnMessage}`, \"error\");\n            }\n          });\n      }\n    });\n  };\n};\n"],"sourceRoot":""}