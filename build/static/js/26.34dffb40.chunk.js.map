{"version":3,"sources":["views/master-wil/services-wil/index.js","views/master-wil/provinsi/Provinsi.js"],"names":["rootAPI","process","urlApi","Get","ServiceName","data","param","undefined","Promise","resolve","reject","axios","get","then","result","error","PostNoJson","serviceName","console","log","post","SVCMasterWil","GetProvinsis","GetProvinsi","AddProvinsi","EditProvinsiWeb","PutTypeJson","HapusProvinsi","GetKabupatenByIdProv","GetKecamatanByIdKab","Provinsi","useState","getModalProv","setModaProv","IdProvinsi","Kode","Nama","dataVal","setData","GetProvinsiAPI","setProvinsiAPI","GetIsUpdate","SetIsUpdate","handleChange","event","dataValNew","target","name","value","GetProvinsisApis","tmpArr","map","val","push","idProvinsi","kode","nama","useEffect","md","xl","xs","block","color","onClick","icon","title","options","headerStyle","backgroundColor","filtering","columns","field","type","visible","cellStyle","actions","tooltip","text","label","rowData","idProv","isSuccess","resultData","setDataNew","handleGetIdProv","id","swal","buttons","dangerMode","willDelete","show","onClose","size","closeButton","htmlFor","placeholder","onChange","e","Swal","fire","returnMessage"],"mappings":"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","file":"static/js/26.34dffb40.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst rootAPI = process.env.REACT_APP_ROOT_API;\nconst rootPath = 'MasterWilOrgs/'\nconst urlApi = rootAPI+rootPath;\n\nconst Get = (ServiceName, data)=> {\n    let param = '';\n    if(data === undefined ){\n      param = '';\n    }else{\n      param = data;\n    }\n    const promise = new Promise((resolve, reject) =>{\n\n        axios.get(`${rootAPI}${ServiceName}${param}`)\n        .then((result) =>{\n          resolve(result.data);\n        }, (error) =>{\n          reject(error)\n        })\n    })\n\n    return promise;\n}\n\nconst PostNoJson = (serviceName, data) => {\n    console.log(data)\n    const promise = new Promise((resolve, reject) =>{\n      axios.post(`${urlApi}${serviceName}?${data}`)\n        .then((result) => {\n          resolve(result.data)\n        }, (error)=> {\n          reject(error)\n        })\n\n    });\n\n    return promise;\n\n}\n\nconst PutTypeJson = (serviceName, data) => {\n  const promise = new Promise((resolve, reject) =>{\n      axios.post(`${urlApi}${serviceName}`, data)\n        .then((result) => {\n          resolve(result.data)\n        }, (error)=> {\n          reject(error)\n        })\n\n    });\n\n    return promise;\n}\n\n/** GET */\nconst GetProvinsis = () => Get('MasterWilOrgs/GetProvinsis');\nconst GetProvinsi = (param) => Get('MasterWilOrgs/GetProvinsi',param);\nconst GetKabupatenByIdProv = (param) => Get('GetKabupatens',param);\nconst GetKecamatanByIdKab = (param) => Get('GetKecamatans',param);\n\n/**POST */\nconst AddProvinsi = (data) => PostNoJson('AddProvinsi', data);\n\n/**Put */\nconst EditProvinsiWeb = (data) => PutTypeJson('EditProvinsi', data);\n\nconst HapusProvinsi = (data) => PostNoJson('DeleteProvinsi', data);\n\n\nconst SVCMasterWil = {\n  GetProvinsis,\n  GetProvinsi,\n  AddProvinsi,\n  EditProvinsiWeb,\n  HapusProvinsi,\n  GetKabupatenByIdProv,\n  GetKecamatanByIdKab\n}\n\nexport default SVCMasterWil\n","/**\n * createdBy : Safari.eri\n * createdDt : 20210318\n * description\n *    Screen master Wilayah Provinsi\n *\n * TODO\n *  - Create, Update, Delete and Retrieve data master Provinsi\n */\n\nimport React,{useState, useEffect} from 'react';\n// import Core UI\nimport {\n  CCard,\n  CCol,\n  CRow,\n  CCardHeader,\n  CCardBody,\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput,\n} from '@coreui/react';\nimport MaterialTable from 'material-table';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport SVCMasterWil from '../services-wil';\nimport swal from 'sweetalert';\nimport Swal from 'sweetalert2';\n\nconst Provinsi = () => {\n\n    const [getModalProv, setModaProv] = useState(false);\n    const [dataVal, setData] = useState({\n      IdProvinsi : '',\n      Kode : '',\n      Nama : ''\n    });\n    const [GetProvinsiAPI, setProvinsiAPI] = useState([]);\n    //const [GetStatusProvinsiApi, SetStatusProvinsiApi] = useState(false);\n    const [GetIsUpdate, SetIsUpdate] = useState(true);\n\n\n    const handleModalProv = () =>{\n      setModaProv(true);\n      SetIsUpdate(false);\n      setData({\n        IdProvinsi : '',\n        Kode : '',\n        Nama : ''\n      })\n    }\n\n\n    const handleChange = (event) => {\n\n        let dataValNew = {...dataVal};\n        dataValNew[event.target.name] = event.target.value;\n        setData(dataValNew);\n      };\n\n    const handlePostProvinsi = () => {\n      if(GetIsUpdate){\n        SVCMasterWil.EditProvinsiWeb(dataVal).then(result => {\n          if(result.isSuccess){\n            swal(\"Provinsi Update\",\"Data Provinsi berhasil dirubah\",\"success\");\n          }\n          setModaProv(!getModalProv);\n          GetProvinsisApis();\n        });\n      }else{\n        let param = `Kode=${dataVal.Kode}&Nama=${dataVal.Nama}`;\n        SVCMasterWil.AddProvinsi(param).then((result) => {\n          if(result.isSuccess){\n            swal(\"Provinsi Add\",\"Data Provinsi berhasil ditambah\",\"success\");\n          }else{\n             Swal.fire('Provinsi Tidak dapat ditambah', `${result.returnMessage}`, 'error')\n          }\n          setModaProv(!getModalProv);\n          GetProvinsisApis();\n        });\n\n      }\n    }\n\n    const GetProvinsisApis = () =>{\n      SVCMasterWil.GetProvinsis().then(result => {\n          let tmpArr = [];\n          let resultData = result.data;\n          resultData.map(val => {\n          tmpArr.push(\n                {\n                  \"id\" : val.idProvinsi,\n                  \"kode\": val.kode,\n                  \"nama\":val.nama\n\n                }\n              );\n          });\n          return setProvinsiAPI(tmpArr);\n      });\n\n    }\n\n    const handleGetIdProv = (idProv) =>{\n      let param = `?IdProvinsi=${idProv}`;\n      SVCMasterWil.GetProvinsi(param).then(result => {\n          if(result.isSuccess){\n\n              let resultData = result.data;\n              let setDataNew = {...dataVal}\n              setDataNew.IdProvinsi = result.data.idProvinsi;\n              setDataNew.Kode = resultData.kode;\n               setDataNew.Nama = resultData.nama;\n                setData(setDataNew);\n              setModaProv(!getModalProv);\n              SetIsUpdate(true);\n          }\n      })\n    }\n\n    const handleDeleteId = (idProv, nama)=> {\n      console.log(idProv)\n      swal({\n        title: \"Konfirmasi Hapus?\",\n        text: `Provinsi ${nama} akan dihapus`,\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true,\n      })\n      .then((willDelete) => {\n        if (willDelete) {\n          SVCMasterWil.HapusProvinsi(`IdProvinsi=${idProv}`).then(result => {\n              if(result.isSuccess){\n                swal(`Provinsi ${nama} telah dihapus`, {\n                icon: \"success\",\n              });\n              GetProvinsisApis();\n              }\n          });\n\n        } else {\n          swal(\"Data tidak dihapus\");\n        }\n      });\n    }\n\n\n\n\n\n    useEffect(() =>{\n      GetProvinsisApis();\n    }, []);\n    return(\n     <CRow>\n        <CCol md=\"12\" xl=\"12\" xs=\"12\">\n            <CCard>\n                <CCardHeader>\n                  <CCol md=\"3\" >\n                        <CButton\n                          block\n                          color=\"primary\"\n                           onClick={handleModalProv}>\n                            <FontAwesomeIcon\n                            icon=\"plus\"/>\n                           Tambah\n                        </CButton>\n                  </CCol>\n                </CCardHeader>\n                <CCardBody>\n                    <MaterialTable\n                      title=\"\"\n                      options={{\n                        headerStyle: {\n                          backgroundColor: '#01579b',\n                          color: '#FFF'\n                        },\n                        filtering:true\n                      }}\n                      columns={[\n                        { title: 'ID Provinsi', field: 'id', type: 'numeric',visible: false ,\n                          cellStyle: {\n                            backgroundColor: '#039be5',\n                            color: '#FFF'\n                          },\n                          headerStyle: {\n                            backgroundColor: '#039be5',\n                          }\n                        },\n                        { title: 'Kode', field: 'kode' },\n                        { title: 'Nama Provinsi', field: 'nama',  },\n\n                      ]}\n                    data={GetProvinsiAPI}\n\n                  actions={[\n                    {\n                      icon: 'edit',\n                      tooltip: 'Edit Provinsi',\n                      text:'Update',\n                      label:'Update',\n                      onClick: (event, rowData) => {\n                          handleGetIdProv(rowData.id)\n                      }\n                    },\n                    {\n                      icon: 'delete',\n                      tooltip: 'Delete Provinsi',\n                      onClick: (event, rowData) => {\n                        handleDeleteId(rowData.id, rowData.nama)\n                      }\n                    }\n                  ]}\n                  />\n                </CCardBody>\n            </CCard>\n        </CCol>\n\n        <CModal\n              show={getModalProv}\n              onClose={() => setModaProv(!getModalProv)}\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Form Provinsi</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                  <CForm>\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-kodeProv\">Kode Provinsi</CLabel>\n                      <CInput type=\"text\" id=\"nf-kode\" value={dataVal.Kode} name=\"Kode\" placeholder=\"Input Kode..\" onChange={(e) => handleChange(e)} />\n                    </CFormGroup>\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-nama\"> Nama Provinsi</CLabel>\n                      <CInput type=\"text\" id=\"nf-nama\" value={dataVal.Nama} name=\"Nama\" placeholder=\"Input Nama Provinsi ..\" onChange={(e) => handleChange(e)} ></CInput>\n                    </CFormGroup>\n                  </CForm>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"primary\" onClick={handlePostProvinsi}>Simpan</CButton>\n                <CButton color=\"secondary\" onClick={() => setModaProv(!getModalProv)}>Cancel</CButton>\n              </CModalFooter>\n        </CModal>\n     </CRow>\n    )\n}\n\nexport default Provinsi;\n"],"sourceRoot":""}