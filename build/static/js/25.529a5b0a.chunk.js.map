{"version":3,"sources":["views/master-wil/kecamatan/Kecamatan.js","views/master-wil/services-wil/index.js"],"names":["Kecamatan","useState","getProvinsiAPI","setProvinsiAPI","GetKabupatenCtr","setKabupatenCtr","getModalKec","setModaKec","SetIsUpdate","IdKab","IdKec","Kode","Nama","dataVal","setData","provinsiChangeHandler","event","target","value","SVCMasterWil","GetKabupatenByIdProv","then","result","isSuccess","data","handleChange","dataValNew","name","useEffect","GetProvinsis","md","xl","xs","block","color","onClick","icon","htmlFor","custom","id","onChange","map","item","idProvinsi","nama","length","idKabupaten","title","options","headerStyle","backgroundColor","filtering","columns","field","type","visible","cellStyle","show","onClose","size","closeButton","placeholder","e","rootAPI","process","urlApi","Get","ServiceName","param","undefined","Promise","resolve","reject","axios","get","error","PostNoJson","serviceName","console","log","post","GetProvinsi","AddProvinsi","EditProvinsiWeb","PutTypeJson","HapusProvinsi","GetKecamatanByIdKab"],"mappings":"uRA8PeA,UAjNG,WAAM,IAAD,EACsBC,mBAAS,IAD/B,mBACZC,EADY,KACIC,EADJ,OAEwBF,mBAAS,IAFjC,gCAGwBA,mBAAS,KAHjC,mBAGZG,EAHY,KAGKC,EAHL,OAIeJ,oBAAS,GAJxB,mBAIZK,EAJY,KAICC,EAJD,OAKgBN,oBAAS,GALzB,mBAKCO,GALD,aAMSP,mBAAS,CACnCQ,MAAQ,GACRC,MAAQ,GACRC,KAAO,GACPC,KAAO,KAVU,mBAMXC,EANW,KAMFC,EANE,KAwBbC,EAAwB,SAACC,GAEH,IAAvBA,EAAMC,OAAOC,MAEdC,IAAaC,qBAAb,sBAAiDJ,EAAMC,OAAOC,QAASG,MAAK,SAAAC,GACrEA,EAAOC,WACRlB,EAAgBiB,EAAOE,SAI3BnB,EAAgB,KAkBhBoB,EAAe,SAACT,GAElB,IAAIU,EAAU,eAAOb,GACrBa,EAAWV,EAAMC,OAAOU,MAAQX,EAAMC,OAAOC,MAC7CJ,EAAQY,IAQZ,OAJAE,qBAAU,WA/CNT,IAAaU,eAAeR,MAAK,SAACC,GAC3BA,EAAOC,UACRpB,EAAemB,EAAOE,MAEtBrB,EAAe,SA6CvB,IAIA,eAAC,IAAD,WACE,cAAC,IAAD,CAAM2B,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACM,cAAC,IAAD,CAAMF,GAAG,IAAT,SACM,eAAC,IAAD,CACEG,OAAK,EACLC,MAAM,UACLC,QAlCM,WAC3B5B,GAAW,GACXC,GAAY,GACZM,EAAQ,CACNJ,MAAQ,GACRC,KAAO,GACPC,KAAO,MAyBS,UAII,cAAC,IAAD,CACAwB,KAAK,SALT,gBAWR,eAAC,IAAD,WACI,eAAC,IAAD,CAAMN,GAAG,IAAT,UACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAQO,QAAQ,kBAAhB,wBACA,eAAC,KAAD,CAASC,QAAM,EAACX,KAAK,kBAAkBY,GAAG,kBAAkBC,SAAUzB,EAAtE,UACI,wBAAQG,MAAM,KAAd,mCACChB,EAAeuC,KAAI,SAAAC,GAAI,OACxB,wBAEExB,MAAOwB,EAAKC,WAFd,SAIGD,EAAKE,MAHDF,EAAKC,qBAUlB,eAAC,IAAD,WACE,cAAC,IAAD,CAAQN,QAAQ,kBAAhB,yBACA,eAAC,KAAD,CAASC,QAAM,EAACX,KAAK,mBAAmBY,GAAG,aAA3C,UACI,wBAAQrB,MAAM,IAAd,oCAE+B,IAA3Bd,EAAgByC,OACdzC,EAAgBqC,KAAI,SAAAC,GAAI,OACxB,wBAEExB,MAAOwB,EAAKI,YAFd,SAIEJ,EAAKE,MAHAF,EAAKI,gBAKT,cAMf,cAAC,IAAD,CACEC,MAAM,GACNC,QAAS,CACPC,YAAa,CACXC,gBAAiB,UACjBhB,MAAO,QAETiB,WAAU,GAEZC,QAAS,CACP,CAAEL,MAAO,eAAgBM,MAAO,KAAMC,KAAM,UAAUC,SAAS,EAC7DC,UAAW,CACTN,gBAAiB,UACjBhB,MAAO,QAETe,YAAa,CACXC,gBAAiB,YAGrB,CAAEH,MAAO,iBAAkBM,MAAO,YAClC,CAAEN,MAAO,OAAQM,MAAO,QACxB,CAAEN,MAAO,iBAAkBM,MAAO,mBAQlD,eAAC,IAAD,CACMI,KAAMnD,EACNoD,QAAS,kBAAMnD,GAAYD,IAC3BqD,KAAK,KAHX,UAKM,cAAC,IAAD,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAD,+BAEF,cAAC,IAAD,UACI,eAAC,IAAD,WACE,eAAC,IAAD,WACK,cAAC,IAAD,CAAQvB,QAAQ,YAAhB,4BACA,eAAC,KAAD,CAASC,QAAM,EAACX,KAAK,kBAAkBY,GAAG,kBAAkBC,SAAUzB,EAAtE,UACG,wBAAQG,MAAM,KAAd,mCACChB,EAAeuC,KAAI,SAAAC,GAAI,OACxB,wBAEExB,MAAOwB,EAAKC,WAFd,SAIGD,EAAKE,MAHDF,EAAKC,qBASpB,eAAC,IAAD,WACE,cAAC,IAAD,CAAQN,QAAQ,kBAAhB,yBACA,eAAC,KAAD,CAASC,QAAM,EAACX,KAAK,mBAAmBY,GAAG,aAA3C,UACI,wBAAQrB,MAAM,IAAd,oCAE+B,IAA3Bd,EAAgByC,OACdzC,EAAgBqC,KAAI,SAAAC,GAAI,OACxB,wBAEExB,MAAOwB,EAAKI,YAFd,SAIEJ,EAAKE,MAHAF,EAAKI,gBAKT,WAIf,eAAC,IAAD,WACE,cAAC,IAAD,CAAQT,QAAQ,aAAhB,4BACA,cAAC,IAAD,CAAQiB,KAAK,OAAOf,GAAG,UAAUrB,MAAOL,EAAQF,KAAMgB,KAAK,OAAOkC,YAAY,eAAerB,SAAU,SAACsB,GAAD,OAAOrC,EAAaqC,SAE7H,eAAC,IAAD,WACE,cAAC,IAAD,CAAQzB,QAAQ,UAAhB,6BACA,cAAC,IAAD,CAAQiB,KAAK,OAAOf,GAAG,UAAUrB,MAAOL,EAAQD,KAAMe,KAAK,OAAOkC,YAAY,yBAAyBrB,SAAU,SAACsB,GAAD,OAAOrC,EAAaqC,cAI7I,eAAC,IAAD,WACE,cAAC,IAAD,CAAS5B,MAAM,UAAf,oBACA,cAAC,IAAD,CAASA,MAAM,YAAYC,QAAS,kBAAM5B,GAAYD,IAAtD,+B,iCCvPhB,sBAEMyD,EAAUC,iCAEVC,EAASF,EADE,iBAGXG,EAAM,SAACC,EAAa3C,GACtB,IAAI4C,EAAQ,GAgBZ,OAdEA,OADUC,IAAT7C,EACO,GAEAA,EAEM,IAAI8C,SAAQ,SAACC,EAASC,GAElCC,IAAMC,IAAN,UAAaX,GAAb,OAAuBI,GAAvB,OAAqCC,IACpC/C,MAAK,SAACC,GACLiD,EAAQjD,EAAOE,SACd,SAACmD,GACFH,EAAOG,UAOXC,EAAa,SAACC,EAAarD,GAY7B,OAXAsD,QAAQC,IAAIvD,GACI,IAAI8C,SAAQ,SAACC,EAASC,GACpCC,IAAMO,KAAN,UAAcf,GAAd,OAAuBY,EAAvB,YAAsCrD,IACnCH,MAAK,SAACC,GACLiD,EAAQjD,EAAOE,SACd,SAACmD,GACFH,EAAOG,UAsCXxD,EAAe,CACnBU,aAfmB,kBAAMqC,EAAI,+BAgB7Be,YAfkB,SAACb,GAAD,OAAWF,EAAI,4BAA4BE,IAgB7Dc,YAXkB,SAAC1D,GAAD,OAAUoD,EAAW,cAAepD,IAYtD2D,gBATsB,SAAC3D,GAAD,OAxBJ,SAACqD,EAAarD,GAW9B,OAVc,IAAI8C,SAAQ,SAACC,EAASC,GAClCC,IAAMO,KAAN,UAAcf,GAAd,OAAuBY,GAAerD,GACnCH,MAAK,SAACC,GACLiD,EAAQjD,EAAOE,SACd,SAACmD,GACFH,EAAOG,SAkBiBS,CAAY,eAAgB5D,IAU5D6D,cARoB,SAAC7D,GAAD,OAAUoD,EAAW,iBAAkBpD,IAS3DJ,qBAlB2B,SAACgD,GAAD,OAAWF,EAAI,gBAAgBE,IAmB1DkB,oBAlB0B,SAAClB,GAAD,OAAWF,EAAI,gBAAgBE,KAqB5CjD","file":"static/js/25.529a5b0a.chunk.js","sourcesContent":["/**\n * createdBy : Safari.eri\n * createdDt : 20210319\n * description\n *    Screen master Wilayah Kabupaten\n *\n * TODO\n *  - Create, Update, Delete and Retrieve data master Kabupaten\n */\n\nimport React,{useState, useEffect} from 'react';\n\n// import Core UI\nimport {\n  CCard,\n  CCol,\n  CRow,\n  CCardHeader,\n  CCardBody,\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CFormText,\n  CHeader,\n  CSelect\n} from '@coreui/react';\nimport MaterialTable from 'material-table'\n\nimport CIcon from '@coreui/icons-react'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport SVCMasterWil from '../services-wil';\nimport swal from 'sweetalert';\n\n\n\n\n\n\nconst Kecamatan = () =>{\n    const [getProvinsiAPI, setProvinsiAPI] = useState([]);\n    const [getKabupatenAPI, setKabupatenAPI] = useState([]);\n    const [GetKabupatenCtr, setKabupatenCtr] = useState([]);\n    const [getModalKec, setModaKec] = useState(false);\n    const [GetIsUpdate, SetIsUpdate] = useState(true);\n     const [dataVal, setData] = useState({\n      IdKab : '',\n      IdKec : '',\n      Kode : '',\n      Nama : ''\n    });\n    const getDataProvinsi = () => {\n        SVCMasterWil.GetProvinsis().then((result) => {\n            if(result.isSuccess){\n              setProvinsiAPI(result.data)\n            }else{\n              setProvinsiAPI({})\n            }\n        })\n    }\n\n\n\n    const provinsiChangeHandler = (event) => {\n\n      if(event.target.value !== 0){\n\n        SVCMasterWil.GetKabupatenByIdProv(`?IdProvinsi=${event.target.value}`).then(result => {\n            if(result.isSuccess){\n              setKabupatenCtr(result.data);\n            }\n        })\n      }else{\n          setKabupatenCtr([]);\n      }\n  }\n\n\n\n    const handleModalKecamatan = ()=>{\n      setModaKec(true);\n      SetIsUpdate(false);\n      setData({\n        IdKec : '',\n        Kode : '',\n        Nama : ''\n      })\n\n    }\n\n\n    const handleChange = (event) => {\n\n        let dataValNew = {...dataVal};\n        dataValNew[event.target.name] = event.target.value;\n        setData(dataValNew);\n      };\n\n\n    useEffect(() =>{\n      getDataProvinsi()\n    },[])\n    //console.log(getProvinsiAPI);\n    return (\n\n      <CRow>\n        <CCol md=\"12\" xl=\"12\" xs=\"12\">\n          <CCard>\n            <CCardHeader>\n                  <CCol md=\"3\" >\n                        <CButton\n                          block\n                          color=\"primary\"\n                           onClick={handleModalKecamatan}>\n                            <FontAwesomeIcon\n                            icon=\"plus\"/>\n                           Tambah\n                        </CButton>\n                  </CCol>\n\n                </CCardHeader>\n                <CCardBody>\n                    <CCol md=\"3\">\n                      <CFormGroup>\n                      <CLabel htmlFor=\"filter_provinsi\"> Provinsi </CLabel>\n                      <CSelect custom name=\"filter_provinsi\" id=\"filter_provinsi\" onChange={provinsiChangeHandler}>\n                          <option value='-1'> --Pilih Provinsi -- </option>\n                          {getProvinsiAPI.map(item => (\n                          <option\n                            key={item.idProvinsi}\n                            value={item.idProvinsi}\n                          >\n                            {item.nama}\n                          </option>\n                        ))}\n\n                      </CSelect>\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"filter_provinsi\"> Kabupaten </CLabel>\n                      <CSelect custom name=\"filter_kecamatan\" id=\"filter_kab\" >\n                          <option value='0'> --Pilih Kabupaten -- </option>\n                            {\n                              GetKabupatenCtr.length !== 0 ?\n                                GetKabupatenCtr.map(item => (\n                                <option\n                                  key={item.idKabupaten}\n                                  value={item.idKabupaten}\n                                >\n                                 {item.nama}\n                                </option>\n                              )) : null\n                            }\n                      </CSelect>\n                    </CFormGroup>\n                  </CCol>\n\n                    <MaterialTable\n                      title=''\n                      options={{\n                        headerStyle: {\n                          backgroundColor: '#01579b',\n                          color: '#FFF'\n                        },\n                        filtering:true\n                      }}\n                      columns={[\n                        { title: 'ID Kecamatan', field: 'id', type: 'numeric',visible: false ,\n                          cellStyle: {\n                            backgroundColor: '#039be5',\n                            color: '#FFF'\n                          },\n                          headerStyle: {\n                            backgroundColor: '#039be5',\n                          }\n                        },\n                        { title: 'Nama Kabupaten', field: 'nama_kab' },\n                        { title: 'Kode', field: 'kode' },\n                        { title: 'Nama Kecamatan', field: 'nama'  },\n\n                      ]} />\n                </CCardBody>\n          </CCard>\n        </CCol>\n\n\n        <CModal\n              show={getModalKec}\n              onClose={() => setModaKec(!getModalKec)}\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Form Kecamatan</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                  <CForm>\n                    <CFormGroup>\n                         <CLabel htmlFor=\"nf-idProv\">Pilih Provinsi</CLabel>\n                         <CSelect custom name=\"filter_provinsi\" id=\"filter_provinsi\" onChange={provinsiChangeHandler}>\n                            <option value='-1'> --Pilih Provinsi -- </option>\n                            {getProvinsiAPI.map(item => (\n                            <option\n                              key={item.idProvinsi}\n                              value={item.idProvinsi}\n                            >\n                              {item.nama}\n                            </option>\n                          ))}\n\n                        </CSelect>\n                    </CFormGroup>\n                    <CFormGroup>\n                      <CLabel htmlFor=\"filter_provinsi\"> Kabupaten </CLabel>\n                      <CSelect custom name=\"filter_kecamatan\" id=\"filter_kab\" >\n                          <option value='0'> --Pilih Kabupaten -- </option>\n                            {\n                              GetKabupatenCtr.length !== 0 ?\n                                GetKabupatenCtr.map(item => (\n                                <option\n                                  key={item.idKabupaten}\n                                  value={item.idKabupaten}\n                                >\n                                 {item.nama}\n                                </option>\n                              )) : null\n                            }\n                      </CSelect>\n                    </CFormGroup>\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-kodeKec\">Kode Kecamatan</CLabel>\n                      <CInput type=\"text\" id=\"nf-kode\" value={dataVal.Kode} name=\"Kode\" placeholder=\"Input Kode..\" onChange={(e) => handleChange(e)} />\n                    </CFormGroup>\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-nama\"> Nama Kecamatan</CLabel>\n                      <CInput type=\"text\" id=\"nf-nama\" value={dataVal.Nama} name=\"Nama\" placeholder=\"Input Nama Provinsi ..\" onChange={(e) => handleChange(e)} ></CInput>\n                    </CFormGroup>\n                  </CForm>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"primary\">Simpan</CButton>\n                <CButton color=\"secondary\" onClick={() => setModaKec(!getModalKec)}>Cancel</CButton>\n              </CModalFooter>\n        </CModal>\n      </CRow>\n    )\n}\n\nexport default Kecamatan;\n","import axios from 'axios';\n\nconst rootAPI = process.env.REACT_APP_ROOT_API;\nconst rootPath = 'MasterWilOrgs/'\nconst urlApi = rootAPI+rootPath;\n\nconst Get = (ServiceName, data)=> {\n    let param = '';\n    if(data === undefined ){\n      param = '';\n    }else{\n      param = data;\n    }\n    const promise = new Promise((resolve, reject) =>{\n\n        axios.get(`${rootAPI}${ServiceName}${param}`)\n        .then((result) =>{\n          resolve(result.data);\n        }, (error) =>{\n          reject(error)\n        })\n    })\n\n    return promise;\n}\n\nconst PostNoJson = (serviceName, data) => {\n    console.log(data)\n    const promise = new Promise((resolve, reject) =>{\n      axios.post(`${urlApi}${serviceName}?${data}`)\n        .then((result) => {\n          resolve(result.data)\n        }, (error)=> {\n          reject(error)\n        })\n\n    });\n\n    return promise;\n\n}\n\nconst PutTypeJson = (serviceName, data) => {\n  const promise = new Promise((resolve, reject) =>{\n      axios.post(`${urlApi}${serviceName}`, data)\n        .then((result) => {\n          resolve(result.data)\n        }, (error)=> {\n          reject(error)\n        })\n\n    });\n\n    return promise;\n}\n\n/** GET */\nconst GetProvinsis = () => Get('MasterWilOrgs/GetProvinsis');\nconst GetProvinsi = (param) => Get('MasterWilOrgs/GetProvinsi',param);\nconst GetKabupatenByIdProv = (param) => Get('GetKabupatens',param);\nconst GetKecamatanByIdKab = (param) => Get('GetKecamatans',param);\n\n/**POST */\nconst AddProvinsi = (data) => PostNoJson('AddProvinsi', data);\n\n/**Put */\nconst EditProvinsiWeb = (data) => PutTypeJson('EditProvinsi', data);\n\nconst HapusProvinsi = (data) => PostNoJson('DeleteProvinsi', data);\n\n\nconst SVCMasterWil = {\n  GetProvinsis,\n  GetProvinsi,\n  AddProvinsi,\n  EditProvinsiWeb,\n  HapusProvinsi,\n  GetKabupatenByIdProv,\n  GetKecamatanByIdKab\n}\n\nexport default SVCMasterWil\n"],"sourceRoot":""}