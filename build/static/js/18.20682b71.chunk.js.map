{"version":3,"sources":["views/pages/login/Login.js"],"names":["Login","useSelector","state","loginReducer","formLogin","modalForget","formForgot","UsernameOrEmail","Password","showModal","UsernameOrEmailForgot","dispatch","type","payload","useDispatch","className","md","name","placeholder","value","onChange","e","setFormLogin","target","xs","color","onClick","apiLogin","src","show","onClose","setFormForgot","ResetPasswordAction"],"mappings":"qMAAA,sEAmLeA,UAlJD,WAAO,IAAD,EAC6BC,aAC7C,SAACC,GAAD,OAAWA,EAAMC,gBADXC,EADU,EACVA,UAAWC,EADD,EACCA,YAAaC,EADd,EACcA,WAGxBC,EAA8BH,EAA9BG,gBAAiBC,EAAaJ,EAAbI,SAEnBC,GAD4BH,EAA1BI,sBACU,kBAChBC,EAAS,CAAEC,KAAM,wBAAyBC,SAAUR,MAChDM,EAAWG,cAWjB,OACE,qBAAKC,UAAU,qDAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,uCACA,mBAAGA,UAAU,aAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOE,KAAK,iBAGhB,cAAC,IAAD,CACEL,KAAK,OACLM,YAAY,mBACZC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OACRV,EACEW,aAAa,kBAAmBD,EAAEE,OAAOJ,cAKjD,eAAC,IAAD,CAAaJ,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOE,KAAK,wBAGhB,cAAC,IAAD,CACEL,KAAK,WACLM,YAAY,WACZC,MAAOX,EACPY,SAAU,SAACC,GAAD,OACRV,EAASW,aAAa,WAAYD,EAAEE,OAAOJ,cAIjD,eAAC,IAAD,WACE,cAAC,IAAD,CAAMK,GAAG,IAAT,SACE,cAAC,IAAD,CACEC,MAAM,UACNV,UAAU,OACVW,QAzDP,kBAAMf,EAASgB,aAASvB,KAsDnB,qBAQF,cAAC,IAAD,CAAMoB,GAAG,IAAIT,UAAU,aAAvB,SACE,cAAC,IAAD,CACEU,MAAM,OACNV,UAAU,OACVW,QAAS,kBAhE/BjB,SACAE,EAAS,CAAEC,KAAM,uBA4DG,0CAYV,cAAC,IAAD,CAAOG,UAAU,iCAAjB,SACE,cAAC,IAAD,CAAWA,UAAU,uBAArB,SACE,8BAKE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEa,IAA8B,iBAC9Bb,UAAU,+BAEZ,qBAAIA,UAAU,aAAd,UACG,IADH,8DAcd,eAAC,IAAD,CAAQc,KAAMxB,EAAayB,QAASrB,EAApC,UACE,cAAC,IAAD,UACE,cAAC,IAAD,8BAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYM,UAAU,WAAtB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQD,UAAU,aAAlB,mCAEF,qBAAKC,GAAG,IAAR,SACE,cAAC,IAAD,CACEE,YAAY,yBACZE,SAAU,SAACC,GAAD,OACRV,EACEoB,aAAc,wBAAyBV,EAAEE,OAAOJ,oBAQ9D,eAAC,IAAD,WACE,cAAC,IAAD,CAASM,MAAM,UAAUC,QAxHd,WACnBf,EAASqB,YAAoB1B,KAuHrB,oBACA,cAAC,IAAD,CAASmB,MAAM,YAAYC,QAASjB,EAApC","file":"static/js/18.20682b71.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormGroup,\n  CImg,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CLabel,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport \"./Login.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  apiLogin,\n  setFormLogin,\n  setFormForgot,\n  ResetPasswordAction,\n} from \"src/common/redux/action\";\n\nconst Login = () => {\n  const { formLogin, modalForget, formForgot } = useSelector(\n    (state) => state.loginReducer\n  );\n  const { UsernameOrEmail, Password } = formLogin;\n  const { UsernameOrEmailForgot } = formForgot;\n  const showModal = () =>\n    dispatch({ type: \"MODAL_FORGOT_PASSWORD\", payload: !modalForget });\n  const dispatch = useDispatch();\n\n  const btnLogin = () => dispatch(apiLogin(formLogin));\n  const handleForgot = () => {\n    showModal();\n    dispatch({ type: \"RESET_FORM_FORGOT\" });\n  };\n  const prosesForgot = () => {\n    dispatch(ResetPasswordAction(formForgot));\n\n  }\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"text\"\n                        placeholder=\"Username / Email\"\n                        value={UsernameOrEmail}\n                        onChange={(e) =>\n                          dispatch(\n                            setFormLogin(\"UsernameOrEmail\", e.target.value)\n                          )\n                        }\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={Password}\n                        onChange={(e) =>\n                          dispatch(setFormLogin(\"Password\", e.target.value))\n                        }\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton\n                          color=\"primary\"\n                          className=\"px-4\"\n                          onClick={btnLogin}\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CButton\n                          color=\"link\"\n                          className=\"px-0\"\n                          onClick={() => handleForgot()}\n                        >\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-whitepy-5 d-md-down-none \">\n                <CCardBody className=\"text-center bg-login\">\n                  <div>\n                    {/* <p style={{ color: \"white\" }} className=\"align-middle\">\n                        Aplikasi Sitem Monitoring dan Evaluasi\n                      </p> */}\n\n                    <div className=\"align-middle\">\n                      <CImg\n                        src={process.env.PUBLIC_URL + \"/Logo-only.png\"}\n                        className=\"text-center img-fluid mb-2\"\n                      />\n                      <h2 className=\"text-title\">\n                        {\" \"}\n                        Sistem Informasi Monitoring dan Evaluasi\n                      </h2>\n                    </div>\n                    {/*  <Link to=\"/monev\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                    </Link> */}\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n        <CModal show={modalForget} onClose={showModal}>\n          <CModalHeader>\n            <CModalTitle>Lupa Password</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CForm>\n              <CFormGroup className=\"form-row\">\n                <CCol md=\"5\">\n                  <CLabel className=\"text-label\">Username atau Email</CLabel>\n                </CCol>\n                <div md=\"7\">\n                  <CInput\n                    placeholder=\"Input Username / Email\"\n                    onChange={(e) =>\n                      dispatch(\n                        setFormForgot(\"UsernameOrEmailForgot\", e.target.value)\n                      )\n                    }\n                  />\n                </div>\n              </CFormGroup>\n            </CForm>\n          </CModalBody>\n          <CModalFooter>\n            <CButton color=\"primary\" onClick={prosesForgot}>Simpan</CButton>\n            <CButton color=\"secondary\" onClick={showModal}>\n              Batal\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}