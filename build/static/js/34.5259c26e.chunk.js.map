{"version":3,"sources":["images/vektors/at_home.png","views/monev/ReportMonev.js","../node_modules/@fortawesome/react-fontawesome/index.es.js"],"names":["ReportMonev","useSelector","state","reportMonevReducer","SetListMonevsReducer","formFilterMonev","modalDetailMonevReducer","GetDetailMonevReducer","Year","dispatch","useDispatch","useState","listOfYear","setListOfyear","showModal","type","payload","useEffect","yearNow","Date","getFullYear","decrementYear","tmpArr","push","key","value","backYear","columns","title","field","cellStyle","backgroundColor","color","width","minWidth","headerStyle","render","rowData","className","content","onClick","id","idMovev","GetDetailMOnevByIdMonevAction","name","idMonev","idUSer","sessionStorage","getItem","axios","url","process","method","responseType","then","response","blob","Blob","data","aEle","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","handleDownloadDetail","DeleteMonevAction","md","xl","xs","Swal","fire","onChange","event","yearValue","target","setFormFilterMonev","map","v","GetMonevByYearAction","icon","options","filtering","length","show","onClose","size","closeButton","undefined","variabels","valueVariabel","indexVariabel","Table","style","colSpan","variabel","idVariabel","indikators","valueIndikator","indexIndikator","indikator","align","textAlign","pertanyaans","valuePertanyaan","indexPertanyaan","pertanyaan","ketersediaan","kecukupan","kondisi","kebutuhan","keterisian","bobotNilai","bobotDefault","jumlah","jumlahBobotNilai","GetDetails","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","call","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","from","_iterableToArray","TypeError","_nonIterableSpread","camelize","string","replace","match","chr","toUpperCase","substr","toLowerCase","styleToObject","split","s","trim","reduce","acc","pair","val","prop","slice","startsWith","charAt","PRODUCTION","e","normalizeIconArgs","parse","prefix","iconName","objectWithKey","FontAwesomeIcon","_ref","forwardedRef","props","iconArgs","maskArgs","mask","symbol","titleId","iconLookup","classes","concat","_classes","spin","pulse","fixedWidth","inverse","border","listItem","flip","rotation","pull","swapOpacity","classList","transform","renderedIcon","_console","console","error","log","abstract","extraProps","ref","defaultProps","hasOwnProperty","convertCurry","displayName","propTypes","PropTypes","bool","oneOfType","array","oneOf","convert","element","children","child","mixins","attributes","attrs","_extraProps$style","existingStyle","remaining","tag","bind","React"],"mappings":"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","file":"static/js/34.5259c26e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/at_home.d165255d.png\";","import React, { useState, useEffect } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CLabel,\n  CSelect,CButton, CFormGroup, CTooltip,\n  CModal,\n  CModalBody,CModalTitle,CModalHeader,CModalFooter\n\n} from \"@coreui/react\";\nimport { freeSet } from \"@coreui/icons\";\nimport CIcon from '@coreui/icons-react';\nimport MaterialTable from \"material-table\";\nimport imageNoAction from \"../../images/vektors/at_home.png\";\nimport axios from 'axios';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  GetMonevByYearAction,\n  setFormFilterMonev,\n  GetDetailMOnevByIdMonevAction,\n  DeleteMonevAction,\n} from \"src/common/redux/action\";\nimport { Table } from '@material-ui/core';\nimport Swal from 'sweetalert2';\nconst ReportMonev = () => {\n\n  // initialization reducer\n\n  const {\n    SetListMonevsReducer,\n    formFilterMonev,\n    modalDetailMonevReducer,\n    GetDetailMonevReducer,\n  } = useSelector((state) => state.reportMonevReducer);\n  const {\n    Year\n  } = formFilterMonev;\n  const dispatch = useDispatch();\n  const [stateFilterShowHide, setStateFilterShowHide] = useState(false);\n  const [listOfYear, setListOfyear] = useState([]);\n  const backYear = () => {\n    let yearNow = new Date().getFullYear();\n    var decrementYear = yearNow - 5;\n    let tmpArr = [];\n    tmpArr.push({\n      key:0,\n      value:\"Pilih\"\n    })\n    for (yearNow; yearNow > decrementYear; yearNow--) {\n      tmpArr.push({\n        key: yearNow,\n        value: yearNow,\n      });\n    }\n    setListOfyear(tmpArr);\n  };\n\n  const handleOnchangeYear = (event) => {\n    let yearValue = event.target.value;\n    dispatch(setFormFilterMonev(\"Year\", yearValue));\n  };\n\n  const filterMonevByTahun = () => {\n    dispatch(GetMonevByYearAction(\"GET_LIST_MONEVS\", Year));\n    //setStateFilterShowHide(true);\n  }\n\n  const showModal = () =>\n    dispatch({ type: \"MODAL_REPORT_DETAIL\", payload: !modalDetailMonevReducer });\n\n  const handlemodalDetailMonev = (id) => {\n    showModal();\n    dispatch(GetDetailMOnevByIdMonevAction(id))\n  }\n\n  const handleDownloadDetail = (idMonev) => {\n    let idUSer = sessionStorage.getItem(\"idUser\");\n    axios({\n      url: `${process.env.REACT_APP_ROOT_API}Mnvs/DownloadLaporanDetilExcel?IdUser=${idUSer}&IdMonev=${idMonev}`,\n      method: \"GET\",\n      responseType: \"blob\",\n    }).then((response) => {\n      const blob = new Blob([response.data], {\n        type:\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\",\n      });\n\n      const aEle = document.createElement(\"a\");\n      const href = window.URL.createObjectURL(blob);\n      aEle.href = href;\n      aEle.download = `LaporanDetil_${Year}.xlsx`;\n\n      document.body.appendChild(aEle);\n      aEle.click();\n      document.body.removeChild(aEle);\n      window.URL.revokeObjectURL(href);\n    });\n\n  }\n\n  const handleDeletMonev = (idMonev) => {\n    dispatch(DeleteMonevAction(idMonev, Year));\n  };\n\n  const GetDetails = () => {\n      if(GetDetailMonevReducer.variabels !== undefined){\n\n             let  buildTable = GetDetailMonevReducer.variabels.map(\n                (valueVariabel, indexVariabel) => {\n                  return (\n                      <Table\n                        key={indexVariabel + 1}\n                        className=\"table table-bordered table-striped responsive no-wrap\"\n                      >\n                          <tr\n                            key={indexVariabel + 1}\n                            style={{ backgroundColor: \"#ebedf2\" }}\n                          >\n                            <th\n                              key={valueVariabel.idVariabel}\n                              colSpan=\"4\"\n                              style={{ backgroundColor: \"#ebedf2\" }}\n                            >\n                              {valueVariabel.variabel}\n                            </th>\n                          </tr>\n                            {valueVariabel.indikators.map(\n                              (valueIndikator, indexIndikator) => {\n                                if (valueIndikator.type === 1) {\n                                  return (\n                                    <CCardBody>\n                                      <tr\n                                        style={{ backgroundColor: \"#ffffcc\" }}\n                                      >\n                                        <th colSpan=\"5\">\n                                          {valueIndikator.indikator}\n                                        </th>\n                                      </tr>\n                                      <tr\n                                        style={{ backgroundColor: \"#fff9de\" }}\n                                      >\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          No\n                                        </th>\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Indikator Evaluasi\n                                        </th>\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Indikator Ketersedian\n                                        </th>\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Indikator Kecukupan\n                                        </th>\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Indikator Kondisi\n                                        </th>\n                                      </tr>\n                                      {valueIndikator.pertanyaans.map(\n                                        (valuePertanyaan, indexPertanyaan) => {\n                                          return (\n                                            <tr>\n                                              <td align=\"center\">\n                                                {\" \"}\n                                                {indexPertanyaan + 1}{\" \"}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.pertanyaan}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.ketersediaan !==\n                                                null ? (\n                                                  valuePertanyaan.ketersediaan\n                                                ) : (\n                                                  <i style={{ color: \"red\" }}>\n                                                    {\" \"}\n                                                    Tidak Ada{\" \"}\n                                                  </i>\n                                                )}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.kecukupan !==\n                                                null ? (\n                                                  valuePertanyaan.kecukupan\n                                                ) : (\n                                                  <i style={{ color: \"red\" }}>\n                                                    {\" \"}\n                                                    Tidak Ada{\" \"}\n                                                  </i>\n                                                )}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.kondisi !==\n                                                null ? (\n                                                  valuePertanyaan.kondisi\n                                                ) : (\n                                                  <i style={{ color: \"red\" }}>\n                                                    {\" \"}\n                                                    Tidak Ada{\" \"}\n                                                  </i>\n                                                )}\n                                              </td>\n                                            </tr>\n                                          );\n                                        }\n                                      )}\n                                    </CCardBody>\n                                  );\n                                }\n                                if(valueIndikator.type === 2)\n                                {\n                                    return (\n                                      <CCardBody>\n                                        <tr\n                                          style={{ backgroundColor: \"#ffffcc\" }}\n                                        >\n                                          <th colSpan=\"6\">\n                                            {valueIndikator.indikator}\n                                          </th>\n                                        </tr>\n                                        <tr\n                                          style={{ backgroundColor: \"#fff9de\" }}\n                                        >\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            No\n                                          </th>\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            Indikator Evaluasi\n                                          </th>\n\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            Jumlah Kebutuhan\n                                          </th>\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            Keterisian\n                                          </th>\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            Bobot Nilai\n                                          </th>\n                                        </tr>\n                                        {valueIndikator.pertanyaans.map(\n                                          (\n                                            valuePertanyaan,\n                                            indexPertanyaan\n                                          ) => {\n                                            return (\n                                              <tr>\n                                                <td align=\"center\">\n                                                  {\" \"}\n                                                  {indexPertanyaan + 1}{\" \"}\n                                                </td>\n                                                <td>\n                                                  {valuePertanyaan.pertanyaan}\n                                                </td>\n                                                <td>\n                                                  {valuePertanyaan.kebutuhan !==\n                                                  null ? (\n                                                    valuePertanyaan.kebutuhan\n                                                  ) : (\n                                                    <i style={{ color: \"red\" }}>\n                                                      {\" \"}\n                                                      Tidak Ada{\" \"}\n                                                    </i>\n                                                  )}\n                                                </td>\n                                                <td>\n                                                  {valuePertanyaan.keterisian !==\n                                                  null ? (\n                                                    valuePertanyaan.keterisian\n                                                  ) : (\n                                                    <i style={{ color: \"red\" }}>\n                                                      {\" \"}\n                                                      Tidak Ada{\" \"}\n                                                    </i>\n                                                  )}\n                                                </td>\n                                                <td>\n                                                  {valuePertanyaan.bobotNilai !==\n                                                  null ? (\n                                                    valuePertanyaan.bobotNilai\n                                                  ) : (\n                                                    <i style={{ color: \"red\" }}>\n                                                      {\" \"}\n                                                      Tidak Ada{\" \"}\n                                                    </i>\n                                                  )}\n                                                </td>\n                                              </tr>\n                                            );\n                                          }\n                                        )}\n                                      </CCardBody>\n                                    );\n                                }\n                                if(valueIndikator.type === 2)\n                                {\n                                    return (\n                                      <CCardBody>\n                                        <tr\n                                          style={{ backgroundColor: \"#ffffcc\" }}\n                                        >\n                                          <th colSpan=\"6\">\n                                            {valueIndikator.indikator}\n                                          </th>\n                                        </tr>\n                                        <tr\n                                          style={{ backgroundColor: \"#fff9de\" }}\n                                        >\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            No\n                                          </th>\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            Indikator Evaluasi\n                                          </th>\n\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            Jumlah Kebutuhan\n                                          </th>\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            Keterisian\n                                          </th>\n                                          <th\n                                            align=\"center\"\n                                            style={{ textAlign: \"center\" }}\n                                          >\n                                            {\" \"}\n                                            Bobot Nilai\n                                          </th>\n                                        </tr>\n                                        {valueIndikator.pertanyaans.map(\n                                          (\n                                            valuePertanyaan,\n                                            indexPertanyaan\n                                          ) => {\n                                            return (\n                                              <tr>\n                                                <td align=\"center\">\n                                                  {\" \"}\n                                                  {indexPertanyaan + 1}{\" \"}\n                                                </td>\n                                                <td>\n                                                  {valuePertanyaan.pertanyaan}\n                                                </td>\n                                                <td>\n                                                  {valuePertanyaan.kebutuhan !==\n                                                  null ? (\n                                                    valuePertanyaan.kebutuhan\n                                                  ) : (\n                                                    <i style={{ color: \"red\" }}>\n                                                      {\" \"}\n                                                      Tidak Ada{\" \"}\n                                                    </i>\n                                                  )}\n                                                </td>\n                                                <td>\n                                                  {valuePertanyaan.keterisian !==\n                                                  null ? (\n                                                    valuePertanyaan.keterisian\n                                                  ) : (\n                                                    <i style={{ color: \"red\" }}>\n                                                      {\" \"}\n                                                      Tidak Ada{\" \"}\n                                                    </i>\n                                                  )}\n                                                </td>\n                                                <td>\n                                                  {valuePertanyaan.bobotNilai !==\n                                                  null ? (\n                                                    valuePertanyaan.bobotNilai\n                                                  ) : (\n                                                    <i style={{ color: \"red\" }}>\n                                                      {\" \"}\n                                                      Tidak Ada{\" \"}\n                                                    </i>\n                                                  )}\n                                                </td>\n                                              </tr>\n                                            );\n                                          }\n                                        )}\n                                      </CCardBody>\n                                    );\n                                }\n                                if (valueIndikator.type === 3) {\n                                  return (\n                                    <CCardBody>\n                                      <tr\n                                        style={{ backgroundColor: \"#ffffcc\" }}\n                                      >\n                                        <th colSpan=\"6\">\n                                          {valueIndikator.indikator}\n                                        </th>\n                                      </tr>\n                                      <tr\n                                        style={{ backgroundColor: \"#fff9de\" }}\n                                      >\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          No\n                                        </th>\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Indikator Evaluasi\n                                        </th>\n\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Bobot Nilai\n                                        </th>\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Banyaknya\n                                        </th>\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Jumlah Bobot Nilai\n                                        </th>\n                                      </tr>\n                                      {valueIndikator.pertanyaans.map(\n                                        (valuePertanyaan, indexPertanyaan) => {\n                                          return (\n                                            <tr>\n                                              <td align=\"center\">\n                                                {\" \"}\n                                                {indexPertanyaan + 1}{\" \"}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.pertanyaan}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.bobotDefault !==\n                                                null ? (\n                                                  valuePertanyaan.bobotDefault\n                                                ) : (\n                                                  <i style={{ color: \"red\" }}>\n                                                    {\" \"}\n                                                    Tidak Ada{\" \"}\n                                                  </i>\n                                                )}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.jumlah !==\n                                                null ? (\n                                                  valuePertanyaan.jumlah\n                                                ) : (\n                                                  <i style={{ color: \"red\" }}>\n                                                    {\" \"}\n                                                    Tidak Ada{\" \"}\n                                                  </i>\n                                                )}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.jumlahBobotNilai !==\n                                                null ? (\n                                                  valuePertanyaan.jumlahBobotNilai\n                                                ) : (\n                                                  <i style={{ color: \"red\" }}>\n                                                    {\" \"}\n                                                    Tidak Ada{\" \"}\n                                                  </i>\n                                                )}\n                                              </td>\n                                            </tr>\n                                          );\n                                        }\n                                      )}\n                                    </CCardBody>\n                                  );\n                                }\n                                if (valueIndikator.type === 4) {\n                                  return (\n                                    <CCardBody>\n                                      <tr\n                                        style={{ backgroundColor: \"#ffffcc\" }}\n                                      >\n                                        <th colSpan=\"6\">\n                                          {valueIndikator.indikator}\n                                        </th>\n                                      </tr>\n                                      <tr\n                                        style={{ backgroundColor: \"#fff9de\" }}\n                                      >\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          No\n                                        </th>\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Indikator Evaluasi\n                                        </th>\n\n                                        <th\n                                          align=\"center\"\n                                          style={{ textAlign: \"center\" }}\n                                        >\n                                          {\" \"}\n                                          Ketersediaan\n                                        </th>\n\n                                      </tr>\n                                      {valueIndikator.pertanyaans.map(\n                                        (valuePertanyaan, indexPertanyaan) => {\n                                          return (\n                                            <tr>\n                                              <td align=\"center\">\n                                                {\" \"}\n                                                {indexPertanyaan + 1}{\" \"}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.pertanyaan}\n                                              </td>\n                                              <td>\n                                                {valuePertanyaan.ketersediaan !==\n                                                null ? (\n                                                  valuePertanyaan.ketersediaan\n                                                ) : (\n                                                  <i style={{ color: \"red\" }}>\n                                                    {\" \"}\n                                                    Tidak Ada{\" \"}\n                                                  </i>\n                                                )}\n                                              </td>\n\n                                            </tr>\n                                          );\n                                        }\n                                      )}\n                                    </CCardBody>\n                                  );\n                                }\n                              }\n                            )}\n                      </Table>\n                  );\n                }\n              );\n        return buildTable;\n      }\n  }\n\n\n  const handleDownloadRekap = () => {\n    if(Year === 0){\n      Swal.fire(\"Gagal\", \"Harap pilih Tahun terlebih dahulu\",\"error\");\n    }else{\n       let idUSer = sessionStorage.getItem(\"idUser\");\n    axios({\n      url: `${process.env.REACT_APP_ROOT_API}Mnvs/DownloadLaporanRekapExcel?IdUser=${idUSer}&Tahun=${Year}`,\n      method: \"GET\",\n      responseType: \"blob\",\n    }).then((response)=> {\n       const blob = new Blob([response.data], {\n         type:\n           \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\",\n       });\n\n       const aEle = document.createElement(\"a\");\n       const href = window.URL.createObjectURL(blob);\n        aEle.href = href;\n       aEle.download = `LaporanRekap_${Year}.xlsx`;\n\n       document.body.appendChild(aEle);\n       aEle.click();\n       document.body.removeChild(aEle);\n       window.URL.revokeObjectURL(href);\n    })\n    }\n\n  };\n\n  useEffect(() => {\n    backYear();\n  }, [dispatch]);\n\n  const columns = [\n    {\n      title: \"Aksi\",\n      field: \"internal_action\",\n      cellStyle: {\n        backgroundColor: \"#039be5\",\n        color: \"#FFF\",\n        width: 200,\n        minWidth: 200,\n      },\n      headerStyle: {\n        backgroundColor: \"#039be5\",\n        width: 190,\n        minWidth: 190,\n      },\n      render: (rowData) => {\n        return (\n          <div className=\"row row d-flex justify-content-center \">\n            <CTooltip content=\"Detail Monev\">\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-success mr-2 ml-4\"\n                onClick={() => handlemodalDetailMonev(rowData.idMovev)}\n              >\n                <CIcon name=\"cilAlignLeft\" />\n              </button>\n            </CTooltip>\n\n            <CTooltip content=\"Download Detail Monev\">\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-dark mr-2 ml-4\"\n                onClick={() => handleDownloadDetail(rowData.idMovev)}\n              >\n                <CIcon name=\"cil-cloud-download\" />\n              </button>\n            </CTooltip>\n            <CTooltip content=\"Hapus Monev\">\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-danger mr-2 ml-4\"\n                onClick={() => handleDeletMonev(rowData.idMovev)}\n              >\n                <CIcon name=\"cilTrash\" />\n              </button>\n            </CTooltip>\n          </div>\n        );\n      },\n    },\n    { title: \"Provinsi\", field: \"provinsi\" },\n    { title: \"Kabupaten\", field: \"kabupaten\" },\n    { title: \"Kecamatan\", field: \"kecamatan\" },\n    { title: \"Nama Pegawai \", field: \"pegawai\" },\n    { title: \"Jabatan\", field: \"jabatan\" },\n    { title: \"Jenis Lokpri\", field: \"jenisLokpri\" },\n    { title: \"Rata - rata CIQ\", field: \"rataRataCiq\" },\n    { title: \"Rata - rata PAP\", field: \"rataRataPap\" },\n    { title: \"Tanggal Input\", field: \"tanggalInput\" },\n  ];\n\n  return (\n    <CRow>\n      <CCol md=\"12\" xl=\"12\" xs=\"12\">\n        <CCard>\n          <CCardHeader>\n            <CRow>\n              <CCol md=\"8\">\n                <h4 color=\"info\" md=\"3\">\n                  Daftar Laporan Monev\n                </h4>\n              </CCol>\n              <CCol md=\"4\" className=\"text-right\">\n                <CButton color=\"success\" onClick={handleDownloadRekap}>\n                  {\" \"}\n                  <CIcon name=\"cil-cloud-download\" /> Download Rekap\n                </CButton>\n              </CCol>\n            </CRow>\n            <CRow>\n              <CCol md=\"7\">\n                <CFormGroup className=\"form-row  mb-3\">\n                  <CLabel className=\"col-md-2\">Tahun</CLabel>\n                  <div className=\"col-md-4\">\n                    <CSelect onChange={handleOnchangeYear}>\n                      {listOfYear.map((v) => (\n                        <option key={v.key} value={v.key}>\n                          {v.value}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <CButton color=\"info\" onClick={filterMonevByTahun}>\n                      {\" \"}\n                      <FontAwesomeIcon className=\"mr-1\" icon=\"search\" />\n                      Filter Monev{\" \"}\n                    </CButton>\n                  </div>\n                </CFormGroup>\n              </CCol>\n              <CCol md=\"5\"></CCol>\n            </CRow>\n          </CCardHeader>\n          <CCardBody>\n            <div>\n              <MaterialTable\n                title=\"\"\n                options={{\n                  headerStyle: {\n                    backgroundColor: \"#01579b\",\n                    color: \"#FFF\",\n                  },\n                  filtering: true,\n                }}\n                columns={columns}\n                data={\n                  SetListMonevsReducer.length > 0 ? SetListMonevsReducer : []\n                }\n              />\n            </div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n\n      <CModal show={modalDetailMonevReducer} onClose={showModal} size=\"lg\">\n        <CModalHeader closeButton>\n          <CModalTitle>Detail Report Monev </CModalTitle>\n        </CModalHeader>\n        <CModalBody>{GetDetails()}</CModalBody>\n      </CModal>\n    </CRow>\n  );\n}\n\nexport default ReportMonev\n","import { parse, icon } from '@fortawesome/fontawesome-svg-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\n// Get CSS class list from a props object\nfunction classList(props) {\n  var _classes;\n\n  var spin = props.spin,\n      pulse = props.pulse,\n      fixedWidth = props.fixedWidth,\n      inverse = props.inverse,\n      border = props.border,\n      listItem = props.listItem,\n      flip = props.flip,\n      size = props.size,\n      rotation = props.rotation,\n      pull = props.pull; // map of CSS class names to properties\n\n  var classes = (_classes = {\n    'fa-spin': spin,\n    'fa-pulse': pulse,\n    'fa-fw': fixedWidth,\n    'fa-inverse': inverse,\n    'fa-border': border,\n    'fa-li': listItem,\n    'fa-flip-horizontal': flip === 'horizontal' || flip === 'both',\n    'fa-flip-vertical': flip === 'vertical' || flip === 'both'\n  }, _defineProperty(_classes, \"fa-\".concat(size), typeof size !== 'undefined' && size !== null), _defineProperty(_classes, \"fa-rotate-\".concat(rotation), typeof rotation !== 'undefined' && rotation !== null && rotation !== 0), _defineProperty(_classes, \"fa-pull-\".concat(pull), typeof pull !== 'undefined' && pull !== null), _defineProperty(_classes, 'fa-swap-opacity', props.swapOpacity), _classes); // map over all the keys in the classes object\n  // return an array of the keys where the value for the key is not null\n\n  return Object.keys(classes).map(function (key) {\n    return classes[key] ? key : null;\n  }).filter(function (key) {\n    return key;\n  });\n}\n\n// Camelize taken from humps\n// humps is copyright © 2012+ Dom Christie\n// Released under the MIT license.\n// Performant way to determine if object coerces to a number\nfunction _isNumerical(obj) {\n  obj = obj - 0; // eslint-disable-next-line no-self-compare\n\n  return obj === obj;\n}\n\nfunction camelize(string) {\n  if (_isNumerical(string)) {\n    return string;\n  } // eslint-disable-next-line no-useless-escape\n\n\n  string = string.replace(/[\\-_\\s]+(.)?/g, function (match, chr) {\n    return chr ? chr.toUpperCase() : '';\n  }); // Ensure 1st char is always lowercase\n\n  return string.substr(0, 1).toLowerCase() + string.substr(1);\n}\n\nfunction capitalize(val) {\n  return val.charAt(0).toUpperCase() + val.slice(1);\n}\n\nfunction styleToObject(style) {\n  return style.split(';').map(function (s) {\n    return s.trim();\n  }).filter(function (s) {\n    return s;\n  }).reduce(function (acc, pair) {\n    var i = pair.indexOf(':');\n    var prop = camelize(pair.slice(0, i));\n    var value = pair.slice(i + 1).trim();\n    prop.startsWith('webkit') ? acc[capitalize(prop)] = value : acc[prop] = value;\n    return acc;\n  }, {});\n}\n\nfunction convert(createElement, element) {\n  var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof element === 'string') {\n    return element;\n  }\n\n  var children = (element.children || []).map(function (child) {\n    return convert(createElement, child);\n  });\n  /* eslint-disable dot-notation */\n\n  var mixins = Object.keys(element.attributes || {}).reduce(function (acc, key) {\n    var val = element.attributes[key];\n\n    switch (key) {\n      case 'class':\n        acc.attrs['className'] = val;\n        delete element.attributes['class'];\n        break;\n\n      case 'style':\n        acc.attrs['style'] = styleToObject(val);\n        break;\n\n      default:\n        if (key.indexOf('aria-') === 0 || key.indexOf('data-') === 0) {\n          acc.attrs[key.toLowerCase()] = val;\n        } else {\n          acc.attrs[camelize(key)] = val;\n        }\n\n    }\n\n    return acc;\n  }, {\n    attrs: {}\n  });\n\n  var _extraProps$style = extraProps.style,\n      existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style,\n      remaining = _objectWithoutProperties(extraProps, [\"style\"]);\n\n  mixins.attrs['style'] = _objectSpread2({}, mixins.attrs['style'], {}, existingStyle);\n  /* eslint-enable */\n\n  return createElement.apply(void 0, [element.tag, _objectSpread2({}, mixins.attrs, {}, remaining)].concat(_toConsumableArray(children)));\n}\n\nvar PRODUCTION = false;\n\ntry {\n  PRODUCTION = process.env.NODE_ENV === 'production';\n} catch (e) {}\n\nfunction log () {\n  if (!PRODUCTION && console && typeof console.error === 'function') {\n    var _console;\n\n    (_console = console).error.apply(_console, arguments);\n  }\n}\n\nfunction normalizeIconArgs(icon) {\n  if (parse.icon) {\n    return parse.icon(icon);\n  } // if the icon is null, there's nothing to do\n\n\n  if (icon === null) {\n    return null;\n  } // if the icon is an object and has a prefix and an icon name, return it\n\n\n  if (_typeof(icon) === 'object' && icon.prefix && icon.iconName) {\n    return icon;\n  } // if it's an array with length of two\n\n\n  if (Array.isArray(icon) && icon.length === 2) {\n    // use the first item as prefix, second as icon name\n    return {\n      prefix: icon[0],\n      iconName: icon[1]\n    };\n  } // if it's a string, use it as the icon name\n\n\n  if (typeof icon === 'string') {\n    return {\n      prefix: 'fas',\n      iconName: icon\n    };\n  }\n}\n\n// creates an object with a key of key\n// and a value of value\n// if certain conditions are met\nfunction objectWithKey(key, value) {\n  // if the value is a non-empty array\n  // or it's not an array but it is truthy\n  // then create the object with the key and the value\n  // if not, return an empty array\n  return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty({}, key, value) : {};\n}\n\nfunction FontAwesomeIcon(_ref) {\n  var forwardedRef = _ref.forwardedRef,\n      props = _objectWithoutProperties(_ref, [\"forwardedRef\"]);\n\n  var iconArgs = props.icon,\n      maskArgs = props.mask,\n      symbol = props.symbol,\n      className = props.className,\n      title = props.title,\n      titleId = props.titleId;\n  var iconLookup = normalizeIconArgs(iconArgs);\n  var classes = objectWithKey('classes', [].concat(_toConsumableArray(classList(props)), _toConsumableArray(className.split(' '))));\n  var transform = objectWithKey('transform', typeof props.transform === 'string' ? parse.transform(props.transform) : props.transform);\n  var mask = objectWithKey('mask', normalizeIconArgs(maskArgs));\n  var renderedIcon = icon(iconLookup, _objectSpread2({}, classes, {}, transform, {}, mask, {\n    symbol: symbol,\n    title: title,\n    titleId: titleId\n  }));\n\n  if (!renderedIcon) {\n    log('Could not find icon', iconLookup);\n    return null;\n  }\n\n  var abstract = renderedIcon.abstract;\n  var extraProps = {\n    ref: forwardedRef\n  };\n  Object.keys(props).forEach(function (key) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {\n      extraProps[key] = props[key];\n    }\n  });\n  return convertCurry(abstract[0], extraProps);\n}\nFontAwesomeIcon.displayName = 'FontAwesomeIcon';\nFontAwesomeIcon.propTypes = {\n  border: PropTypes.bool,\n  className: PropTypes.string,\n  mask: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n  fixedWidth: PropTypes.bool,\n  inverse: PropTypes.bool,\n  flip: PropTypes.oneOf(['horizontal', 'vertical', 'both']),\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n  listItem: PropTypes.bool,\n  pull: PropTypes.oneOf(['right', 'left']),\n  pulse: PropTypes.bool,\n  rotation: PropTypes.oneOf([0, 90, 180, 270]),\n  size: PropTypes.oneOf(['lg', 'xs', 'sm', '1x', '2x', '3x', '4x', '5x', '6x', '7x', '8x', '9x', '10x']),\n  spin: PropTypes.bool,\n  symbol: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  title: PropTypes.string,\n  transform: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  swapOpacity: PropTypes.bool\n};\nFontAwesomeIcon.defaultProps = {\n  border: false,\n  className: '',\n  mask: null,\n  fixedWidth: false,\n  inverse: false,\n  flip: null,\n  icon: null,\n  listItem: false,\n  pull: null,\n  pulse: false,\n  rotation: null,\n  size: null,\n  spin: false,\n  symbol: false,\n  title: '',\n  transform: null,\n  swapOpacity: false\n};\nvar convertCurry = convert.bind(null, React.createElement);\n\nexport { FontAwesomeIcon };\n"],"sourceRoot":""}